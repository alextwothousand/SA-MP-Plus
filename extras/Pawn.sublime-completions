{
	"scope": "source.pawn - variable.other.pawn",

	"completions": [
		{ "trigger": "gettime", "contents": "gettime()" },
		{ "trigger": "getdate", "contents": "getdate()" },
		{ "trigger": "tickcount", "contents": "tickcount()" },
		{ "trigger": "strlen", "contents": "strlen(${1:string[]})" },
		{ "trigger": "strpack", "contents": "strpack(${1:dest[]}, ${2:source[]})" },
		{ "trigger": "strunpack", "contents": "strunpack(${1:dest[]}, ${2:source[]})" },
		{ "trigger": "strcat", "contents": "strcat(${1:dest[]}, ${2:source[]})" },
		{ "trigger": "strmid", "contents": "strmid(${1:dest[]}, ${2:source[]}, ${3:start}, ${4:end})" },
		{ "trigger": "strins", "contents": "strins(${1:string[]}, ${2:substr[]}, ${3:pos})" },
		{ "trigger": "strdel", "contents": "strdel(${1:string[]}, ${2:start}, ${3:end})" },
		{ "trigger": "strcmp", "contents": "strcmp(${1:string1[]}, ${2:string2[]})" },
		{ "trigger": "strfind", "contents": "strfind(${1:string[]}, ${2:sub[]})" },
		{ "trigger": "strval", "contents": "strval(${1:string[]})" },
		{ "trigger": "valstr", "contents": "valstr(${1:dest[]}, ${2:value})" },
		{ "trigger": "ispacked", "contents": "ispacked(${1:string[]})" },
		{ "trigger": "uudecode", "contents": "uudecode(${1:dest[]}, ${2:source[]})" },
		{ "trigger": "uuencode", "contents": "uuencode(${1:dest[]}, ${2:source[]}, ${3:numbytes})" },
		{ "trigger": "memcpy", "contents": "memcpy(${1:dest[]}, ${2:source[]})" },
		{ "trigger": "Streamer_TickRate", "contents": "Streamer_TickRate(${1:rate})" },
		{ "trigger": "Streamer_MaxItems", "contents": "Streamer_MaxItems(${1:type}, ${2:items})" },
		{ "trigger": "Streamer_VisibleItems", "contents": "Streamer_VisibleItems(${1:type}, ${2:items})" },
		{ "trigger": "Streamer_CellDistance", "contents": "Streamer_CellDistance(${1:distance})" },
		{ "trigger": "Streamer_CellSize", "contents": "Streamer_CellSize(${1:size})" },
		{ "trigger": "Streamer_ProcessActiveItems", "contents": "Streamer_ProcessActiveItems()" },
		{ "trigger": "Streamer_ToggleIdleUpdate", "contents": "Streamer_ToggleIdleUpdate(${1:playerid}, ${2:toggle})" },
		{ "trigger": "Streamer_ToggleItemUpdate", "contents": "Streamer_ToggleItemUpdate(${1:playerid}, ${2:type}, ${3:toggle})" },
		{ "trigger": "Streamer_Update", "contents": "Streamer_Update(${1:playerid})" },
		{ "trigger": "Streamer_UpdateEx", "contents": "Streamer_UpdateEx(${1:playerid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "Streamer_GetFloatData", "contents": "Streamer_GetFloatData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:&result})" },
		{ "trigger": "Streamer_SetFloatData", "contents": "Streamer_SetFloatData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:value})" },
		{ "trigger": "Streamer_GetIntData", "contents": "Streamer_GetIntData(${1:type}, ${2:{Text3D,_}:id}, ${3:data})" },
		{ "trigger": "Streamer_SetIntData", "contents": "Streamer_SetIntData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:value})" },
		{ "trigger": "Streamer_GetArrayData", "contents": "Streamer_GetArrayData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:dest[]})" },
		{ "trigger": "Streamer_SetArrayData", "contents": "Streamer_SetArrayData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:src[]})" },
		{ "trigger": "Streamer_IsInArrayData", "contents": "Streamer_IsInArrayData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:value})" },
		{ "trigger": "Streamer_AppendArrayData", "contents": "Streamer_AppendArrayData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:value})" },
		{ "trigger": "Streamer_RemoveArrayData", "contents": "Streamer_RemoveArrayData(${1:type}, ${2:{Text3D,_}:id}, ${3:data}, ${4:value})" },
		{ "trigger": "Streamer_GetUpperBound", "contents": "Streamer_GetUpperBound(${1:type})" },
		{ "trigger": "Streamer_GetDistanceToItem", "contents": "Streamer_GetDistanceToItem(${1:x}, ${2:y}, ${3:z}, ${4:type}, ${5:{Text3D,_}:id}, ${6:&distance})" },
		{ "trigger": "Streamer_IsItemVisible", "contents": "Streamer_IsItemVisible(${1:playerid}, ${2:type}, ${3:{Text3D,_}:id})" },
		{ "trigger": "Streamer_DestroyAllVisibleItems", "contents": "Streamer_DestroyAllVisibleItems(${1:playerid}, ${2:type})" },
		{ "trigger": "Streamer_CountVisibleItems", "contents": "Streamer_CountVisibleItems(${1:playerid}, ${2:type})" },
		{ "trigger": "CreateDynamicObject", "contents": "CreateDynamicObject(${1:modelid}, ${2:x}, ${3:y}, ${4:z}, ${5:rx}, ${6:ry}, ${7:rz})" },
		{ "trigger": "DestroyDynamicObject", "contents": "DestroyDynamicObject(${1:objectid})" },
		{ "trigger": "IsValidDynamicObject", "contents": "IsValidDynamicObject(${1:objectid})" },
		{ "trigger": "SetDynamicObjectPos", "contents": "SetDynamicObjectPos(${1:objectid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "GetDynamicObjectPos", "contents": "GetDynamicObjectPos(${1:objectid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "SetDynamicObjectRot", "contents": "SetDynamicObjectRot(${1:objectid}, ${2:rx}, ${3:ry}, ${4:rz})" },
		{ "trigger": "GetDynamicObjectRot", "contents": "GetDynamicObjectRot(${1:objectid}, ${2:&rx}, ${3:&ry}, ${4:&rz})" },
		{ "trigger": "MoveDynamicObject", "contents": "MoveDynamicObject(${1:objectid}, ${2:x}, ${3:y}, ${4:z}, ${5:speed})" },
		{ "trigger": "StopDynamicObject", "contents": "StopDynamicObject(${1:objectid})" },
		{ "trigger": "IsDynamicObjectMoving", "contents": "IsDynamicObjectMoving(${1:objectid})" },
		{ "trigger": "AttachCameraToDynamicObject", "contents": "AttachCameraToDynamicObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "AttachDynamicObjectToVehicle", "contents": "AttachDynamicObjectToVehicle(${1:objectid}, ${2:vehicleid}, ${3:offsetx}, ${4:offsety}, ${5:offsetz}, ${6:rx}, ${7:ry}, ${8:rz})" },
		{ "trigger": "EditDynamicObject", "contents": "EditDynamicObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "GetDynamicObjectMaterial", "contents": "GetDynamicObjectMaterial(${1:objectid}, ${2:materialindex}, ${3:&modelid}, ${4:txdname[]}, ${5:texturename[]}, ${6:&materialcolor})" },
		{ "trigger": "SetDynamicObjectMaterial", "contents": "SetDynamicObjectMaterial(${1:objectid}, ${2:materialindex}, ${3:modelid}, ${4:txdname[]}, ${5:texturename[]})" },
		{ "trigger": "GetDynamicObjectMaterialText", "contents": "GetDynamicObjectMaterialText(${1:objectid}, ${2:materialindex}, ${3:text[]}, ${4:&materialsize}, ${5:fontface[]}, ${6:&fontsize}, ${7:&bold}, ${8:&fontcolor}, ${9:&backcolor}, ${10:&textalignment})" },
		{ "trigger": "SetDynamicObjectMaterialText", "contents": "SetDynamicObjectMaterialText(${1:objectid}, ${2:materialindex}, ${3:text[]})" },
		{ "trigger": "DestroyAllDynamicObjects", "contents": "DestroyAllDynamicObjects()" },
		{ "trigger": "CountDynamicObjects", "contents": "CountDynamicObjects()" },
		{ "trigger": "CreateDynamicPickup", "contents": "CreateDynamicPickup(${1:modelid}, ${2:type}, ${3:x}, ${4:y}, ${5:z})" },
		{ "trigger": "DestroyDynamicPickup", "contents": "DestroyDynamicPickup(${1:pickupid})" },
		{ "trigger": "IsValidDynamicPickup", "contents": "IsValidDynamicPickup(${1:pickupid})" },
		{ "trigger": "DestroyAllDynamicPickups", "contents": "DestroyAllDynamicPickups()" },
		{ "trigger": "CountDynamicPickups", "contents": "CountDynamicPickups()" },
		{ "trigger": "CreateDynamicCP", "contents": "CreateDynamicCP(${1:x}, ${2:y}, ${3:z}, ${4:size})" },
		{ "trigger": "DestroyDynamicCP", "contents": "DestroyDynamicCP(${1:checkpointid})" },
		{ "trigger": "IsValidDynamicCP", "contents": "IsValidDynamicCP(${1:checkpointid})" },
		{ "trigger": "TogglePlayerDynamicCP", "contents": "TogglePlayerDynamicCP(${1:playerid}, ${2:checkpointid}, ${3:toggle})" },
		{ "trigger": "TogglePlayerAllDynamicCPs", "contents": "TogglePlayerAllDynamicCPs(${1:playerid}, ${2:toggle})" },
		{ "trigger": "IsPlayerInDynamicCP", "contents": "IsPlayerInDynamicCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "GetPlayerVisibleDynamicCP", "contents": "GetPlayerVisibleDynamicCP(${1:playerid})" },
		{ "trigger": "DestroyAllDynamicCPs", "contents": "DestroyAllDynamicCPs()" },
		{ "trigger": "CountDynamicCPs", "contents": "CountDynamicCPs()" },
		{ "trigger": "CreateDynamicRaceCP", "contents": "CreateDynamicRaceCP(${1:type}, ${2:x}, ${3:y}, ${4:z}, ${5:nextx}, ${6:nexty}, ${7:nextz}, ${8:size})" },
		{ "trigger": "DestroyDynamicRaceCP", "contents": "DestroyDynamicRaceCP(${1:checkpointid})" },
		{ "trigger": "IsValidDynamicRaceCP", "contents": "IsValidDynamicRaceCP(${1:checkpointid})" },
		{ "trigger": "TogglePlayerDynamicRaceCP", "contents": "TogglePlayerDynamicRaceCP(${1:playerid}, ${2:checkpointid}, ${3:toggle})" },
		{ "trigger": "TogglePlayerAllDynamicRaceCPs", "contents": "TogglePlayerAllDynamicRaceCPs(${1:playerid}, ${2:toggle})" },
		{ "trigger": "IsPlayerInDynamicRaceCP", "contents": "IsPlayerInDynamicRaceCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "GetPlayerVisibleDynamicRaceCP", "contents": "GetPlayerVisibleDynamicRaceCP(${1:playerid})" },
		{ "trigger": "DestroyAllDynamicRaceCPs", "contents": "DestroyAllDynamicRaceCPs()" },
		{ "trigger": "CountDynamicRaceCPs", "contents": "CountDynamicRaceCPs()" },
		{ "trigger": "CreateDynamicMapIcon", "contents": "CreateDynamicMapIcon(${1:x}, ${2:y}, ${3:z}, ${4:type}, ${5:color})" },
		{ "trigger": "DestroyDynamicMapIcon", "contents": "DestroyDynamicMapIcon(${1:iconid})" },
		{ "trigger": "IsValidDynamicMapIcon", "contents": "IsValidDynamicMapIcon(${1:iconid})" },
		{ "trigger": "DestroyAllDynamicMapIcons", "contents": "DestroyAllDynamicMapIcons()" },
		{ "trigger": "CountDynamicMapIcons", "contents": "CountDynamicMapIcons()" },
		{ "trigger": "CreateDynamic3DTextLabel", "contents": "CreateDynamic3DTextLabel(${1:text[]}, ${2:color}, ${3:x}, ${4:y}, ${5:z}, ${6:drawdistance})" },
		{ "trigger": "DestroyDynamic3DTextLabel", "contents": "DestroyDynamic3DTextLabel(${1:id})" },
		{ "trigger": "IsValidDynamic3DTextLabel", "contents": "IsValidDynamic3DTextLabel(${1:id})" },
		{ "trigger": "GetDynamic3DTextLabelText", "contents": "GetDynamic3DTextLabelText(${1:id}, ${2:text[]})" },
		{ "trigger": "UpdateDynamic3DTextLabelText", "contents": "UpdateDynamic3DTextLabelText(${1:id}, ${2:color}, ${3:text[]})" },
		{ "trigger": "DestroyAllDynamic3DTextLabels", "contents": "DestroyAllDynamic3DTextLabels()" },
		{ "trigger": "CountDynamic3DTextLabels", "contents": "CountDynamic3DTextLabels()" },
		{ "trigger": "CreateDynamicCircle", "contents": "CreateDynamicCircle(${1:x}, ${2:y}, ${3:size})" },
		{ "trigger": "CreateDynamicRectangle", "contents": "CreateDynamicRectangle(${1:minx}, ${2:miny}, ${3:maxx}, ${4:maxy})" },
		{ "trigger": "CreateDynamicSphere", "contents": "CreateDynamicSphere(${1:x}, ${2:y}, ${3:z}, ${4:size})" },
		{ "trigger": "CreateDynamicCube", "contents": "CreateDynamicCube(${1:minx}, ${2:miny}, ${3:minz}, ${4:maxx}, ${5:maxy}, ${6:maxz})" },
		{ "trigger": "CreateDynamicPolygon", "contents": "CreateDynamicPolygon(${1:points[]})" },
		{ "trigger": "DestroyDynamicArea", "contents": "DestroyDynamicArea(${1:areaid})" },
		{ "trigger": "IsValidDynamicArea", "contents": "IsValidDynamicArea(${1:areaid})" },
		{ "trigger": "TogglePlayerDynamicArea", "contents": "TogglePlayerDynamicArea(${1:playerid}, ${2:areaid}, ${3:toggle})" },
		{ "trigger": "TogglePlayerAllDynamicAreas", "contents": "TogglePlayerAllDynamicAreas(${1:playerid}, ${2:toggle})" },
		{ "trigger": "IsPlayerInDynamicArea", "contents": "IsPlayerInDynamicArea(${1:playerid}, ${2:areaid})" },
		{ "trigger": "IsPlayerInAnyDynamicArea", "contents": "IsPlayerInAnyDynamicArea(${1:playerid})" },
		{ "trigger": "IsPointInDynamicArea", "contents": "IsPointInDynamicArea(${1:areaid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "IsPointInAnyDynamicArea", "contents": "IsPointInAnyDynamicArea(${1:x}, ${2:y}, ${3:z})" },
		{ "trigger": "AttachDynamicAreaToObject", "contents": "AttachDynamicAreaToObject(${1:areaid}, ${2:objectid})" },
		{ "trigger": "AttachDynamicAreaToPlayer", "contents": "AttachDynamicAreaToPlayer(${1:areaid}, ${2:playerid})" },
		{ "trigger": "AttachDynamicAreaToVehicle", "contents": "AttachDynamicAreaToVehicle(${1:areaid}, ${2:vehicleid})" },
		{ "trigger": "DestroyAllDynamicAreas", "contents": "DestroyAllDynamicAreas()" },
		{ "trigger": "CountDynamicAreas", "contents": "CountDynamicAreas()" },
		{ "trigger": "CreateDynamicObjectEx", "contents": "CreateDynamicObjectEx(${1:modelid}, ${2:x}, ${3:y}, ${4:z}, ${5:rx}, ${6:ry}, ${7:rz})" },
		{ "trigger": "CreateDynamicPickupEx", "contents": "CreateDynamicPickupEx(${1:modelid}, ${2:type}, ${3:x}, ${4:y}, ${5:z})" },
		{ "trigger": "CreateDynamicCPEx", "contents": "CreateDynamicCPEx(${1:x}, ${2:y}, ${3:z}, ${4:size})" },
		{ "trigger": "CreateDynamicRaceCPEx", "contents": "CreateDynamicRaceCPEx(${1:type}, ${2:x}, ${3:y}, ${4:z}, ${5:nextx}, ${6:nexty}, ${7:nextz}, ${8:size})" },
		{ "trigger": "CreateDynamicMapIconEx", "contents": "CreateDynamicMapIconEx(${1:x}, ${2:y}, ${3:z}, ${4:type}, ${5:color})" },
		{ "trigger": "CreateDynamic3DTextLabelEx", "contents": "CreateDynamic3DTextLabelEx(${1:text[]}, ${2:color}, ${3:x}, ${4:y}, ${5:z}, ${6:drawdistance})" },
		{ "trigger": "CreateDynamicCircleEx", "contents": "CreateDynamicCircleEx(${1:x}, ${2:y}, ${3:size})" },
		{ "trigger": "CreateDynamicRectangleEx", "contents": "CreateDynamicRectangleEx(${1:minx}, ${2:miny}, ${3:maxx}, ${4:maxy})" },
		{ "trigger": "CreateDynamicSphereEx", "contents": "CreateDynamicSphereEx(${1:x}, ${2:y}, ${3:z}, ${4:size})" },
		{ "trigger": "CreateDynamicCubeEx", "contents": "CreateDynamicCubeEx(${1:minx}, ${2:miny}, ${3:minz}, ${4:maxx}, ${5:maxy}, ${6:maxz})" },
		{ "trigger": "CreateDynamicPolygonEx", "contents": "CreateDynamicPolygonEx(${1:points[]})" },
		{ "trigger": "OnDynamicObjectMoved", "contents": "OnDynamicObjectMoved(${1:objectid})" },
		{ "trigger": "OnPlayerEditDynamicObject", "contents": "OnPlayerEditDynamicObject(${1:playerid}, ${2:objectid}, ${3:response}, ${4:x}, ${5:y}, ${6:z}, ${7:rx}, ${8:ry}, ${9:rz})" },
		{ "trigger": "OnPlayerSelectDynamicObject", "contents": "OnPlayerSelectDynamicObject(${1:playerid}, ${2:objectid}, ${3:modelid}, ${4:x}, ${5:y}, ${6:z})" },
		{ "trigger": "OnPlayerPickUpDynamicPickup", "contents": "OnPlayerPickUpDynamicPickup(${1:playerid}, ${2:pickupid})" },
		{ "trigger": "OnPlayerEnterDynamicCP", "contents": "OnPlayerEnterDynamicCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "OnPlayerLeaveDynamicCP", "contents": "OnPlayerLeaveDynamicCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "OnPlayerEnterDynamicRaceCP", "contents": "OnPlayerEnterDynamicRaceCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "OnPlayerLeaveDynamicRaceCP", "contents": "OnPlayerLeaveDynamicRaceCP(${1:playerid}, ${2:checkpointid})" },
		{ "trigger": "OnPlayerEnterDynamicArea", "contents": "OnPlayerEnterDynamicArea(${1:playerid}, ${2:areaid})" },
		{ "trigger": "OnPlayerLeaveDynamicArea", "contents": "OnPlayerLeaveDynamicArea(${1:playerid}, ${2:areaid})" },
		{ "trigger": "Streamer_OnFilterScriptInit", "contents": "Streamer_OnFilterScriptInit()" },
		{ "trigger": "Streamer_OnGameModeInit", "contents": "Streamer_OnGameModeInit()" },
		{ "trigger": "Streamer_OnPlayerConnect", "contents": "Streamer_OnPlayerConnect(${1:playerid})" },
		{ "trigger": "Streamer_OnPlayerDisconnect", "contents": "Streamer_OnPlayerDisconnect(${1:playerid}, ${2:reason})" },
		{ "trigger": "Streamer_OnPlayerEditObject", "contents": "Streamer_OnPlayerEditObject(${1:playerid}, ${2:playerobject}, ${3:objectid}, ${4:response}, ${5:fX}, ${6:fY}, ${7:fZ}, ${8:fRotX}, ${9:fRotY}, ${10:fRotZ})" },
		{ "trigger": "Streamer_OnPlayerSelectObject", "contents": "Streamer_OnPlayerSelectObject(${1:playerid}, ${2:type}, ${3:objectid}, ${4:modelid}, ${5:fX}, ${6:fY}, ${7:fZ})" },
		{ "trigger": "Streamer_OnPlayerPickUpPickup", "contents": "Streamer_OnPlayerPickUpPickup(${1:playerid}, ${2:pickupid})" },
		{ "trigger": "Streamer_OnPlayerEnterCP", "contents": "Streamer_OnPlayerEnterCP(${1:playerid})" },
		{ "trigger": "Streamer_OnPlayerLeaveCP", "contents": "Streamer_OnPlayerLeaveCP(${1:playerid})" },
		{ "trigger": "Streamer_OnPlayerEnterRaceCP", "contents": "Streamer_OnPlayerEnterRaceCP(${1:playerid})" },
		{ "trigger": "Streamer_OnPlayerLeaveRaceCP", "contents": "Streamer_OnPlayerLeaveRaceCP(${1:playerid})" },
		{ "trigger": "float", "contents": "float(${1:value})" },
		{ "trigger": "floatstr", "contents": "floatstr(${1:string[]})" },
		{ "trigger": "floatmul", "contents": "floatmul(${1:oper1}, ${2:oper2})" },
		{ "trigger": "floatdiv", "contents": "floatdiv(${1:dividend}, ${2:divisor})" },
		{ "trigger": "floatadd", "contents": "floatadd(${1:oper1}, ${2:oper2})" },
		{ "trigger": "floatsub", "contents": "floatsub(${1:oper1}, ${2:oper2})" },
		{ "trigger": "floatfract", "contents": "floatfract(${1:value})" },
		{ "trigger": "floatround", "contents": "floatround(${1:value})" },
		{ "trigger": "floatcmp", "contents": "floatcmp(${1:oper1}, ${2:oper2})" },
		{ "trigger": "floatsqroot", "contents": "floatsqroot(${1:value})" },
		{ "trigger": "floatpower", "contents": "floatpower(${1:value}, ${2:exponent})" },
		{ "trigger": "floatlog", "contents": "floatlog(${1:value})" },
		{ "trigger": "floatsin", "contents": "floatsin(${1:value})" },
		{ "trigger": "floatcos", "contents": "floatcos(${1:value})" },
		{ "trigger": "floattan", "contents": "floattan(${1:value})" },
		{ "trigger": "floatabs", "contents": "floatabs(${1:value})" },
		{ "trigger": "fopen", "contents": "fopen(${1:name[]})" },
		{ "trigger": "fclose", "contents": "fclose(${1: handle})" },
		{ "trigger": "ftemp", "contents": "ftemp()" },
		{ "trigger": "fremove", "contents": "fremove(${1:name[]})" },
		{ "trigger": "fwrite", "contents": "fwrite(${1: handle}, ${2:string[]})" },
		{ "trigger": "fread", "contents": "fread(${1: handle}, ${2:string[]})" },
		{ "trigger": "fputchar", "contents": "fputchar(${1: handle}, ${2:value})" },
		{ "trigger": "fgetchar", "contents": "fgetchar(${1: handle}, ${2:value})" },
		{ "trigger": "fblockwrite", "contents": "fblockwrite(${1: handle}, ${2:buffer[]})" },
		{ "trigger": "fblockread", "contents": "fblockread(${1: handle}, ${2:buffer[]})" },
		{ "trigger": "fseek", "contents": "fseek(${1: handle})" },
		{ "trigger": "flength", "contents": "flength(${1: handle})" },
		{ "trigger": "fexist", "contents": "fexist(${1:pattern[]})" },
		{ "trigger": "fmatch", "contents": "fmatch(${1:name[]}, ${2:pattern[]})" },
		{ "trigger": "sendstring", "contents": "sendstring(${1:message[]})" },
		{ "trigger": "sendpacket", "contents": "sendpacket(${1:packet[]}, ${2:size})" },
		{ "trigger": "listenport", "contents": "listenport(${1:port})" },
		{ "trigger": "receivestring", "contents": "receivestring(${1:message[]}, ${2:source[]})" },
		{ "trigger": "receivepacket", "contents": "receivepacket(${1:packet[]}, ${2:size}, ${3:source[]})" },
		{ "trigger": "heapspace", "contents": "heapspace()" },
		{ "trigger": "funcidx", "contents": "funcidx(${1:name[]})" },
		{ "trigger": "numargs", "contents": "numargs()" },
		{ "trigger": "getarg", "contents": "getarg(${1:arg})" },
		{ "trigger": "setarg", "contents": "setarg(${1:arg})" },
		{ "trigger": "tolower", "contents": "tolower(${1:c})" },
		{ "trigger": "toupper", "contents": "toupper(${1:c})" },
		{ "trigger": "swapchars", "contents": "swapchars(${1:c})" },
		{ "trigger": "random", "contents": "random(${1:max})" },
		{ "trigger": "min", "contents": "min(${1:value1}, ${2:value2})" },
		{ "trigger": "max", "contents": "max(${1:value1}, ${2:value2})" },
		{ "trigger": "clamp", "contents": "clamp(${1:value})" },
		{ "trigger": "getproperty", "contents": "getproperty()" },
		{ "trigger": "setproperty", "contents": "setproperty()" },
		{ "trigger": "deleteproperty", "contents": "deleteproperty()" },
		{ "trigger": "existproperty", "contents": "existproperty()" },
		{ "trigger": "CreateVehicle", "contents": "CreateVehicle(${1:vehicletype}, ${2:x}, ${3:y}, ${4:z}, ${5:rotation}, ${6:color1}, ${7:color2}, ${8:respawn_delay})" },
		{ "trigger": "DestroyVehicle", "contents": "DestroyVehicle(${1:vehicleid})" },
		{ "trigger": "IsVehicleStreamedIn", "contents": "IsVehicleStreamedIn(${1:vehicleid}, ${2:forplayerid})" },
		{ "trigger": "GetVehiclePos", "contents": "GetVehiclePos(${1:vehicleid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "SetVehiclePos", "contents": "SetVehiclePos(${1:vehicleid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "GetVehicleZAngle", "contents": "GetVehicleZAngle(${1:vehicleid}, ${2:&z_angle})" },
		{ "trigger": "GetVehicleRotationQuat", "contents": "GetVehicleRotationQuat(${1:vehicleid}, ${2:&w}, ${3:&x}, ${4:&y}, ${5:&z})" },
		{ "trigger": "GetVehicleDistanceFromPoint", "contents": "GetVehicleDistanceFromPoint(${1:vehicleid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "SetVehicleZAngle", "contents": "SetVehicleZAngle(${1:vehicleid}, ${2:z_angle})" },
		{ "trigger": "SetVehicleParamsForPlayer", "contents": "SetVehicleParamsForPlayer(${1:vehicleid,playerid,objective,doorslocked})" },
		{ "trigger": "ManualVehicleEngineAndLights", "contents": "ManualVehicleEngineAndLights()" },
		{ "trigger": "SetVehicleParamsEx", "contents": "SetVehicleParamsEx(${1:vehicleid}, ${2:engine}, ${3:lights}, ${4:alarm}, ${5:doors}, ${6:bonnet}, ${7:boot}, ${8:objective})" },
		{ "trigger": "GetVehicleParamsEx", "contents": "GetVehicleParamsEx(${1:vehicleid}, ${2:&engine}, ${3:&lights}, ${4:&alarm}, ${5:&doors}, ${6:&bonnet}, ${7:&boot}, ${8:&objective})" },
		{ "trigger": "SetVehicleToRespawn", "contents": "SetVehicleToRespawn(${1:vehicleid})" },
		{ "trigger": "LinkVehicleToInterior", "contents": "LinkVehicleToInterior(${1:vehicleid}, ${2:interiorid})" },
		{ "trigger": "AddVehicleComponent", "contents": "AddVehicleComponent(${1:vehicleid}, ${2:componentid})" },
		{ "trigger": "RemoveVehicleComponent", "contents": "RemoveVehicleComponent(${1:vehicleid}, ${2:componentid})" },
		{ "trigger": "ChangeVehicleColor", "contents": "ChangeVehicleColor(${1:vehicleid}, ${2:color1}, ${3:color2})" },
		{ "trigger": "ChangeVehiclePaintjob", "contents": "ChangeVehiclePaintjob(${1:vehicleid}, ${2:paintjobid})" },
		{ "trigger": "SetVehicleHealth", "contents": "SetVehicleHealth(${1:vehicleid}, ${2:health})" },
		{ "trigger": "GetVehicleHealth", "contents": "GetVehicleHealth(${1:vehicleid}, ${2:&health})" },
		{ "trigger": "AttachTrailerToVehicle", "contents": "AttachTrailerToVehicle(${1:trailerid}, ${2:vehicleid})" },
		{ "trigger": "DetachTrailerFromVehicle", "contents": "DetachTrailerFromVehicle(${1:vehicleid})" },
		{ "trigger": "IsTrailerAttachedToVehicle", "contents": "IsTrailerAttachedToVehicle(${1:vehicleid})" },
		{ "trigger": "GetVehicleTrailer", "contents": "GetVehicleTrailer(${1:vehicleid})" },
		{ "trigger": "SetVehicleNumberPlate", "contents": "SetVehicleNumberPlate(${1:vehicleid}, ${2:numberplate[]})" },
		{ "trigger": "GetVehicleModel", "contents": "GetVehicleModel(${1:vehicleid})" },
		{ "trigger": "GetVehicleComponentInSlot", "contents": "GetVehicleComponentInSlot(${1:vehicleid}, ${2:slot})" },
		{ "trigger": "GetVehicleComponentType", "contents": "GetVehicleComponentType(${1:component})" },
		{ "trigger": "RepairVehicle", "contents": "RepairVehicle(${1:vehicleid})" },
		{ "trigger": "GetVehicleVelocity", "contents": "GetVehicleVelocity(${1:vehicleid}, ${2:&X}, ${3:&Y}, ${4:&Z})" },
		{ "trigger": "SetVehicleVelocity", "contents": "SetVehicleVelocity(${1:vehicleid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "SetVehicleAngularVelocity", "contents": "SetVehicleAngularVelocity(${1:vehicleid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "GetVehicleDamageStatus", "contents": "GetVehicleDamageStatus(${1:vehicleid}, ${2:&panels}, ${3:&doors}, ${4:&lights}, ${5:&tires})" },
		{ "trigger": "UpdateVehicleDamageStatus", "contents": "UpdateVehicleDamageStatus(${1:vehicleid}, ${2:panels}, ${3:doors}, ${4:lights}, ${5:tires})" },
		{ "trigger": "GetVehicleModelInfo", "contents": "GetVehicleModelInfo(${1:vehiclemodel}, ${2:infotype}, ${3:&X}, ${4:&Y}, ${5:&Z})" },
		{ "trigger": "SetVehicleVirtualWorld", "contents": "SetVehicleVirtualWorld(${1:vehicleid}, ${2:worldid})" },
		{ "trigger": "GetVehicleVirtualWorld", "contents": "GetVehicleVirtualWorld(${1:vehicleid})" },
		{ "trigger": "db_open", "contents": "db_open(${1:name[]})" },
		{ "trigger": "db_close", "contents": "db_close(${1:db})" },
		{ "trigger": "db_query", "contents": "db_query(${1:db,query[]})" },
		{ "trigger": "db_free_result", "contents": "db_free_result(${1:dbresult})" },
		{ "trigger": "db_num_rows", "contents": "db_num_rows(${1:dbresult})" },
		{ "trigger": "db_next_row", "contents": "db_next_row(${1:dbresult})" },
		{ "trigger": "db_num_fields", "contents": "db_num_fields(${1:dbresult})" },
		{ "trigger": "db_field_name", "contents": "db_field_name(${1:dbresult}, ${2:field}, ${3:result[]}, ${4:maxlength})" },
		{ "trigger": "db_get_field", "contents": "db_get_field(${1:dbresult}, ${2:field}, ${3:result[]}, ${4:maxlength})" },
		{ "trigger": "db_get_field_assoc", "contents": "db_get_field_assoc(${1:dbresult}, ${2:field[]}, ${3:result[]}, ${4:maxlength})" },
		{ "trigger": "print", "contents": "print(${1:string[]})" },
		{ "trigger": "printf", "contents": "printf(${1:format[]}, ${2:{Float,_}:...})" },
		{ "trigger": "format", "contents": "format(${1:output[]}, ${2:len}, ${3:format[]}, ${4:{Float,_}:...})" },
		{ "trigger": "SendClientMessage", "contents": "SendClientMessage(${1:playerid}, ${2:color}, ${3:message[]})" },
		{ "trigger": "SendClientMessageToAll", "contents": "SendClientMessageToAll(${1:color}, ${2:message[]})" },
		{ "trigger": "SendPlayerMessageToPlayer", "contents": "SendPlayerMessageToPlayer(${1:playerid}, ${2:senderid}, ${3:message[]})" },
		{ "trigger": "SendPlayerMessageToAll", "contents": "SendPlayerMessageToAll(${1:senderid}, ${2:message[]})" },
		{ "trigger": "SendDeathMessage", "contents": "SendDeathMessage(${1:killer,killee,weapon})" },
		{ "trigger": "GameTextForAll", "contents": "GameTextForAll(${1:string[],time,style})" },
		{ "trigger": "GameTextForPlayer", "contents": "GameTextForPlayer(${1:playerid,string[],time,style})" },
		{ "trigger": "SetTimer", "contents": "SetTimer(${1:funcname[]}, ${2:interval}, ${3:repeating})" },
		{ "trigger": "SetTimerEx", "contents": "SetTimerEx(${1:funcname[]}, ${2:interval}, ${3:repeating}, ${4:format[]}, ${5:{Float,_}:...})" },
		{ "trigger": "KillTimer", "contents": "KillTimer(${1:timerid})" },
		{ "trigger": "GetTickCount", "contents": "GetTickCount()" },
		{ "trigger": "GetMaxPlayers", "contents": "GetMaxPlayers()" },
		{ "trigger": "CallRemoteFunction", "contents": "CallRemoteFunction(${1:function[]}, ${2:format[]}, ${3:{Float,_}:...})" },
		{ "trigger": "CallLocalFunction", "contents": "CallLocalFunction(${1:function[]}, ${2:format[]}, ${3:{Float,_}:...})" },
		{ "trigger": "asin", "contents": "asin(${1:value})" },
		{ "trigger": "acos", "contents": "acos(${1:value})" },
		{ "trigger": "atan", "contents": "atan(${1:value})" },
		{ "trigger": "atan2", "contents": "atan2(${1:x}, ${2:y})" },
		{ "trigger": "SetGameModeText", "contents": "SetGameModeText(${1:string[]})" },
		{ "trigger": "SetTeamCount", "contents": "SetTeamCount(${1:count})" },
		{ "trigger": "AddPlayerClass", "contents": "AddPlayerClass(${1:modelid}, ${2:spawn_x}, ${3:spawn_y}, ${4:spawn_z}, ${5:z_angle}, ${6:weapon1}, ${7:weapon1_ammo}, ${8:weapon2}, ${9:weapon2_ammo}, ${10:weapon3}, ${11:weapon3_ammo})" },
		{ "trigger": "AddPlayerClassEx", "contents": "AddPlayerClassEx(${1:teamid}, ${2:modelid}, ${3:spawn_x}, ${4:spawn_y}, ${5:spawn_z}, ${6:z_angle}, ${7:weapon1}, ${8:weapon1_ammo}, ${9:weapon2}, ${10:weapon2_ammo}, ${11:weapon3}, ${12:weapon3_ammo})" },
		{ "trigger": "AddStaticVehicle", "contents": "AddStaticVehicle(${1:modelid}, ${2:spawn_x}, ${3:spawn_y}, ${4:spawn_z}, ${5:z_angle}, ${6:color1}, ${7:color2})" },
		{ "trigger": "AddStaticVehicleEx", "contents": "AddStaticVehicleEx(${1:modelid}, ${2:spawn_x}, ${3:spawn_y}, ${4:spawn_z}, ${5:z_angle}, ${6:color1}, ${7:color2}, ${8:respawn_delay})" },
		{ "trigger": "AddStaticPickup", "contents": "AddStaticPickup(${1:model}, ${2:type}, ${3:X}, ${4:Y}, ${5:Z})" },
		{ "trigger": "CreatePickup", "contents": "CreatePickup(${1:model}, ${2:type}, ${3:X}, ${4:Y}, ${5:Z})" },
		{ "trigger": "DestroyPickup", "contents": "DestroyPickup(${1:pickup})" },
		{ "trigger": "ShowNameTags", "contents": "ShowNameTags(${1:show})" },
		{ "trigger": "ShowPlayerMarkers", "contents": "ShowPlayerMarkers(${1:mode})" },
		{ "trigger": "GameModeExit", "contents": "GameModeExit()" },
		{ "trigger": "SetWorldTime", "contents": "SetWorldTime(${1:hour})" },
		{ "trigger": "GetWeaponName", "contents": "GetWeaponName(${1:weaponid}, ${2:weapon[]}, ${3:len})" },
		{ "trigger": "EnableTirePopping", "contents": "EnableTirePopping(${1:enable})" },
		{ "trigger": "EnableVehicleFriendlyFire", "contents": "EnableVehicleFriendlyFire()" },
		{ "trigger": "AllowInteriorWeapons", "contents": "AllowInteriorWeapons(${1:allow})" },
		{ "trigger": "SetWeather", "contents": "SetWeather(${1:weatherid})" },
		{ "trigger": "SetGravity", "contents": "SetGravity(${1:gravity})" },
		{ "trigger": "AllowAdminTeleport", "contents": "AllowAdminTeleport(${1:allow})" },
		{ "trigger": "SetDeathDropAmount", "contents": "SetDeathDropAmount(${1:amount})" },
		{ "trigger": "CreateExplosion", "contents": "CreateExplosion(${1:X}, ${2:Y}, ${3:Z}, ${4:type}, ${5:Radius})" },
		{ "trigger": "EnableZoneNames", "contents": "EnableZoneNames(${1:enable})" },
		{ "trigger": "UsePlayerPedAnims", "contents": "UsePlayerPedAnims()" },
		{ "trigger": "DisableInteriorEnterExits", "contents": "DisableInteriorEnterExits()" },
		{ "trigger": "SetNameTagDrawDistance", "contents": "SetNameTagDrawDistance(${1:distance})" },
		{ "trigger": "DisableNameTagLOS", "contents": "DisableNameTagLOS()" },
		{ "trigger": "LimitGlobalChatRadius", "contents": "LimitGlobalChatRadius(${1:chat_radius})" },
		{ "trigger": "LimitPlayerMarkerRadius", "contents": "LimitPlayerMarkerRadius(${1:marker_radius})" },
		{ "trigger": "ConnectNPC", "contents": "ConnectNPC(${1:name[]}, ${2:script[]})" },
		{ "trigger": "IsPlayerNPC", "contents": "IsPlayerNPC(${1:playerid})" },
		{ "trigger": "IsPlayerAdmin", "contents": "IsPlayerAdmin(${1:playerid})" },
		{ "trigger": "Kick", "contents": "Kick(${1:playerid})" },
		{ "trigger": "Ban", "contents": "Ban(${1:playerid})" },
		{ "trigger": "BanEx", "contents": "BanEx(${1:playerid}, ${2:reason[]})" },
		{ "trigger": "SendRconCommand", "contents": "SendRconCommand(${1:command[]})" },
		{ "trigger": "GetServerVarAsString", "contents": "GetServerVarAsString(${1:varname[]}, ${2:buffer[]}, ${3:len})" },
		{ "trigger": "GetServerVarAsInt", "contents": "GetServerVarAsInt(${1:varname[]})" },
		{ "trigger": "GetServerVarAsBool", "contents": "GetServerVarAsBool(${1:varname[]})" },
		{ "trigger": "GetPlayerNetworkStats", "contents": "GetPlayerNetworkStats(${1:playerid}, ${2:retstr[]}, ${3:retstr_size})" },
		{ "trigger": "GetNetworkStats", "contents": "GetNetworkStats(${1:retstr[]}, ${2:retstr_size})" },
		{ "trigger": "GetPlayerVersion", "contents": "GetPlayerVersion(${1:playerid}, ${2:version[]}, ${3:len})" },
		{ "trigger": "CreateMenu", "contents": "CreateMenu(${1:title[]}, ${2:columns}, ${3:x}, ${4:y}, ${5:col1width})" },
		{ "trigger": "DestroyMenu", "contents": "DestroyMenu(${1:menuid})" },
		{ "trigger": "AddMenuItem", "contents": "AddMenuItem(${1:menuid}, ${2:column}, ${3:menutext[]})" },
		{ "trigger": "SetMenuColumnHeader", "contents": "SetMenuColumnHeader(${1:menuid}, ${2:column}, ${3:columnheader[]})" },
		{ "trigger": "ShowMenuForPlayer", "contents": "ShowMenuForPlayer(${1:menuid}, ${2:playerid})" },
		{ "trigger": "HideMenuForPlayer", "contents": "HideMenuForPlayer(${1:menuid}, ${2:playerid})" },
		{ "trigger": "IsValidMenu", "contents": "IsValidMenu(${1:menuid})" },
		{ "trigger": "DisableMenu", "contents": "DisableMenu(${1:menuid})" },
		{ "trigger": "DisableMenuRow", "contents": "DisableMenuRow(${1:menuid}, ${2:row})" },
		{ "trigger": "GetPlayerMenu", "contents": "GetPlayerMenu(${1:playerid})" },
		{ "trigger": "TextDrawCreate", "contents": "TextDrawCreate(${1:x}, ${2:y}, ${3:text[]})" },
		{ "trigger": "TextDrawDestroy", "contents": "TextDrawDestroy(${1:text})" },
		{ "trigger": "TextDrawLetterSize", "contents": "TextDrawLetterSize(${1:text}, ${2:x}, ${3:y})" },
		{ "trigger": "TextDrawTextSize", "contents": "TextDrawTextSize(${1:text}, ${2:x}, ${3:y})" },
		{ "trigger": "TextDrawAlignment", "contents": "TextDrawAlignment(${1:text}, ${2:alignment})" },
		{ "trigger": "TextDrawColor", "contents": "TextDrawColor(${1:text}, ${2:color})" },
		{ "trigger": "TextDrawUseBox", "contents": "TextDrawUseBox(${1:text}, ${2:use})" },
		{ "trigger": "TextDrawBoxColor", "contents": "TextDrawBoxColor(${1:text}, ${2:color})" },
		{ "trigger": "TextDrawSetShadow", "contents": "TextDrawSetShadow(${1:text}, ${2:size})" },
		{ "trigger": "TextDrawSetOutline", "contents": "TextDrawSetOutline(${1:text}, ${2:size})" },
		{ "trigger": "TextDrawBackgroundColor", "contents": "TextDrawBackgroundColor(${1:text}, ${2:color})" },
		{ "trigger": "TextDrawFont", "contents": "TextDrawFont(${1:text}, ${2:font})" },
		{ "trigger": "TextDrawSetProportional", "contents": "TextDrawSetProportional(${1:text}, ${2:set})" },
		{ "trigger": "TextDrawSetSelectable", "contents": "TextDrawSetSelectable(${1:text}, ${2:set})" },
		{ "trigger": "TextDrawShowForPlayer", "contents": "TextDrawShowForPlayer(${1:playerid}, ${2:text})" },
		{ "trigger": "TextDrawHideForPlayer", "contents": "TextDrawHideForPlayer(${1:playerid}, ${2:text})" },
		{ "trigger": "TextDrawShowForAll", "contents": "TextDrawShowForAll(${1:text})" },
		{ "trigger": "TextDrawHideForAll", "contents": "TextDrawHideForAll(${1:text})" },
		{ "trigger": "TextDrawSetString", "contents": "TextDrawSetString(${1:text}, ${2:string[]})" },
		{ "trigger": "TextDrawSetPreviewModel", "contents": "TextDrawSetPreviewModel(${1:text}, ${2:modelindex})" },
		{ "trigger": "TextDrawSetPreviewRot", "contents": "TextDrawSetPreviewRot(${1:text}, ${2:fRotX}, ${3:fRotY}, ${4:fRotZ})" },
		{ "trigger": "TextDrawSetPreviewVehCol", "contents": "TextDrawSetPreviewVehCol(${1:text}, ${2:color1}, ${3:color2})" },
		{ "trigger": "GangZoneCreate", "contents": "GangZoneCreate(${1:minx}, ${2:miny}, ${3:maxx}, ${4:maxy})" },
		{ "trigger": "GangZoneDestroy", "contents": "GangZoneDestroy(${1:zone})" },
		{ "trigger": "GangZoneShowForPlayer", "contents": "GangZoneShowForPlayer(${1:playerid}, ${2:zone}, ${3:color})" },
		{ "trigger": "GangZoneShowForAll", "contents": "GangZoneShowForAll(${1:zone}, ${2:color})" },
		{ "trigger": "GangZoneHideForPlayer", "contents": "GangZoneHideForPlayer(${1:playerid}, ${2:zone})" },
		{ "trigger": "GangZoneHideForAll", "contents": "GangZoneHideForAll(${1:zone})" },
		{ "trigger": "GangZoneFlashForPlayer", "contents": "GangZoneFlashForPlayer(${1:playerid}, ${2:zone}, ${3:flashcolor})" },
		{ "trigger": "GangZoneFlashForAll", "contents": "GangZoneFlashForAll(${1:zone}, ${2:flashcolor})" },
		{ "trigger": "GangZoneStopFlashForPlayer", "contents": "GangZoneStopFlashForPlayer(${1:playerid}, ${2:zone})" },
		{ "trigger": "GangZoneStopFlashForAll", "contents": "GangZoneStopFlashForAll(${1:zone})" },
		{ "trigger": "Create3DTextLabel", "contents": "Create3DTextLabel(${1:text[]}, ${2:color}, ${3:X}, ${4:Y}, ${5:Z}, ${6:DrawDistance}, ${7:virtualworld})" },
		{ "trigger": "Delete3DTextLabel", "contents": "Delete3DTextLabel(${1:id})" },
		{ "trigger": "Attach3DTextLabelToPlayer", "contents": "Attach3DTextLabelToPlayer(${1:id}, ${2:playerid}, ${3:OffsetX}, ${4:OffsetY}, ${5:OffsetZ})" },
		{ "trigger": "Attach3DTextLabelToVehicle", "contents": "Attach3DTextLabelToVehicle(${1:id}, ${2:vehicleid}, ${3:OffsetX}, ${4:OffsetY}, ${5:OffsetZ})" },
		{ "trigger": "Update3DTextLabelText", "contents": "Update3DTextLabelText(${1:id}, ${2:color}, ${3:text[]})" },
		{ "trigger": "PlayerCreatePlayer3DTextLabel", "contents": "PlayerCreatePlayer3DTextLabel(${1:playerid}, ${2:text[]}, ${3:color}, ${4:X}, ${5:Y}, ${6:Z}, ${7:DrawDistance})" },
		{ "trigger": "DeletePlayer3DTextLabel", "contents": "DeletePlayer3DTextLabel(${1:playerid}, ${2:Playerid})" },
		{ "trigger": "UpdatePlayer3DTextLabelText", "contents": "UpdatePlayer3DTextLabelText(${1:playerid}, ${2:Playerid}, ${3:color}, ${4:text[]})" },
		{ "trigger": "ShowPlayerDialog", "contents": "ShowPlayerDialog(${1:playerid}, ${2:dialogid}, ${3:style}, ${4:caption[]}, ${5:info[]}, ${6:button1[]}, ${7:button2[]})" },
		{ "trigger": "OnGameModeInit", "contents": "OnGameModeInit()" },
		{ "trigger": "OnGameModeExit", "contents": "OnGameModeExit()" },
		{ "trigger": "OnFilterScriptInit", "contents": "OnFilterScriptInit()" },
		{ "trigger": "OnFilterScriptExit", "contents": "OnFilterScriptExit()" },
		{ "trigger": "OnPlayerConnect", "contents": "OnPlayerConnect(${1:playerid})" },
		{ "trigger": "OnPlayerDisconnect", "contents": "OnPlayerDisconnect(${1:playerid}, ${2:reason})" },
		{ "trigger": "OnPlayerSpawn", "contents": "OnPlayerSpawn(${1:playerid})" },
		{ "trigger": "OnPlayerDeath", "contents": "OnPlayerDeath(${1:playerid}, ${2:killerid}, ${3:reason})" },
		{ "trigger": "OnVehicleSpawn", "contents": "OnVehicleSpawn(${1:vehicleid})" },
		{ "trigger": "OnVehicleDeath", "contents": "OnVehicleDeath(${1:vehicleid}, ${2:killerid})" },
		{ "trigger": "OnPlayerText", "contents": "OnPlayerText(${1:playerid}, ${2:text[]})" },
		{ "trigger": "OnPlayerCommandText", "contents": "OnPlayerCommandText(${1:playerid}, ${2:cmdtext[]})" },
		{ "trigger": "OnPlayerRequestClass", "contents": "OnPlayerRequestClass(${1:playerid}, ${2:classid})" },
		{ "trigger": "OnPlayerEnterVehicle", "contents": "OnPlayerEnterVehicle(${1:playerid}, ${2:vehicleid}, ${3:ispassenger})" },
		{ "trigger": "OnPlayerExitVehicle", "contents": "OnPlayerExitVehicle(${1:playerid}, ${2:vehicleid})" },
		{ "trigger": "OnPlayerStateChange", "contents": "OnPlayerStateChange(${1:playerid}, ${2:newstate}, ${3:oldstate})" },
		{ "trigger": "OnPlayerEnterCheckpoint", "contents": "OnPlayerEnterCheckpoint(${1:playerid})" },
		{ "trigger": "OnPlayerLeaveCheckpoint", "contents": "OnPlayerLeaveCheckpoint(${1:playerid})" },
		{ "trigger": "OnPlayerEnterRaceCheckpoint", "contents": "OnPlayerEnterRaceCheckpoint(${1:playerid})" },
		{ "trigger": "OnPlayerLeaveRaceCheckpoint", "contents": "OnPlayerLeaveRaceCheckpoint(${1:playerid})" },
		{ "trigger": "OnRconCommand", "contents": "OnRconCommand(${1:cmd[]})" },
		{ "trigger": "OnPlayerRequestSpawn", "contents": "OnPlayerRequestSpawn(${1:playerid})" },
		{ "trigger": "OnObjectMoved", "contents": "OnObjectMoved(${1:objectid})" },
		{ "trigger": "OnPlayerObjectMoved", "contents": "OnPlayerObjectMoved(${1:playerid}, ${2:objectid})" },
		{ "trigger": "OnPlayerPickUpPickup", "contents": "OnPlayerPickUpPickup(${1:playerid}, ${2:pickupid})" },
		{ "trigger": "OnVehicleMod", "contents": "OnVehicleMod(${1:playerid}, ${2:vehicleid}, ${3:componentid})" },
		{ "trigger": "OnEnterExitModShop", "contents": "OnEnterExitModShop(${1:playerid}, ${2:enterexit}, ${3:interiorid})" },
		{ "trigger": "OnVehiclePaintjob", "contents": "OnVehiclePaintjob(${1:playerid}, ${2:vehicleid}, ${3:paintjobid})" },
		{ "trigger": "OnVehicleRespray", "contents": "OnVehicleRespray(${1:playerid}, ${2:vehicleid}, ${3:color1}, ${4:color2})" },
		{ "trigger": "OnVehicleDamageStatusUpdate", "contents": "OnVehicleDamageStatusUpdate(${1:vehicleid}, ${2:playerid})" },
		{ "trigger": "OnUnoccupiedVehicleUpdate", "contents": "OnUnoccupiedVehicleUpdate(${1:vehicleid}, ${2:playerid}, ${3:passenger_seat})" },
		{ "trigger": "OnPlayerSelectedMenuRow", "contents": "OnPlayerSelectedMenuRow(${1:playerid}, ${2:row})" },
		{ "trigger": "OnPlayerExitedMenu", "contents": "OnPlayerExitedMenu(${1:playerid})" },
		{ "trigger": "OnPlayerInteriorChange", "contents": "OnPlayerInteriorChange(${1:playerid}, ${2:newinteriorid}, ${3:oldinteriorid})" },
		{ "trigger": "OnPlayerKeyStateChange", "contents": "OnPlayerKeyStateChange(${1:playerid}, ${2:newkeys}, ${3:oldkeys})" },
		{ "trigger": "OnRconLoginAttempt", "contents": "OnRconLoginAttempt(${1: ip[]}, ${2:password[]}, ${3:success })" },
		{ "trigger": "OnPlayerUpdate", "contents": "OnPlayerUpdate(${1:playerid})" },
		{ "trigger": "OnPlayerStreamIn", "contents": "OnPlayerStreamIn(${1:playerid}, ${2:forplayerid})" },
		{ "trigger": "OnPlayerStreamOut", "contents": "OnPlayerStreamOut(${1:playerid}, ${2:forplayerid})" },
		{ "trigger": "OnVehicleStreamIn", "contents": "OnVehicleStreamIn(${1:vehicleid}, ${2:forplayerid})" },
		{ "trigger": "OnVehicleStreamOut", "contents": "OnVehicleStreamOut(${1:vehicleid}, ${2:forplayerid})" },
		{ "trigger": "OnDialogResponse", "contents": "OnDialogResponse(${1:playerid}, ${2:dialogid}, ${3:response}, ${4:listitem}, ${5:inputtext[]})" },
		{ "trigger": "OnPlayerTakeDamage", "contents": "OnPlayerTakeDamage(${1:playerid}, ${2:issuerid}, ${3:amount}, ${4:weaponid})" },
		{ "trigger": "OnPlayerGiveDamage", "contents": "OnPlayerGiveDamage(${1:playerid}, ${2:damagedid}, ${3:amount}, ${4:weaponid})" },
		{ "trigger": "OnPlayerClickMap", "contents": "OnPlayerClickMap(${1:playerid}, ${2:fX}, ${3:fY}, ${4:fZ})" },
		{ "trigger": "OnPlayerClickTextDraw", "contents": "OnPlayerClickTextDraw(${1:playerid}, ${2:clickedid})" },
		{ "trigger": "OnPlayerClickPlayerTextDraw", "contents": "OnPlayerClickPlayerTextDraw(${1:playerid}, ${2:Playerplayertextid})" },
		{ "trigger": "OnPlayerClickPlayer", "contents": "OnPlayerClickPlayer(${1:playerid}, ${2:clickedplayerid}, ${3:source})" },
		{ "trigger": "OnPlayerEditObject", "contents": "OnPlayerEditObject(${1: playerid}, ${2:playerobject}, ${3:obj})" },
		{ "trigger": "OnPlayerEditAttachedObject", "contents": "OnPlayerEditAttachedObject(${1: playerid}, ${2:response})" },
		{ "trigger": "OnPlayerSelectObject", "contents": "OnPlayerSelectObject(${1:playerid}, ${2:type}, ${3:objectid}, ${4:modelid}, ${5:fX}, ${6:fY}, ${7:fZ})" },
		{ "trigger": "SetSpawnInfo", "contents": "SetSpawnInfo(${1:playerid}, ${2:team}, ${3:skin}, ${4:x}, ${5:y}, ${6:z}, ${7:rotation}, ${8:weapon1}, ${9:weapon1_ammo}, ${10:weapon2}, ${11:weapon2_ammo}, ${12:weapon3}, ${13:weapon3_ammo})" },
		{ "trigger": "SpawnPlayer", "contents": "SpawnPlayer(${1:playerid})" },
		{ "trigger": "SetPlayerPos", "contents": "SetPlayerPos(${1:playerid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "SetPlayerPosFindZ", "contents": "SetPlayerPosFindZ(${1:playerid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "GetPlayerPos", "contents": "GetPlayerPos(${1:playerid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "SetPlayerFacingAngle", "contents": "SetPlayerFacingAngle(${1:playerid,ang})" },
		{ "trigger": "GetPlayerFacingAngle", "contents": "GetPlayerFacingAngle(${1:playerid,&ang})" },
		{ "trigger": "IsPlayerInRangeOfPoint", "contents": "IsPlayerInRangeOfPoint(${1:playerid}, ${2:range}, ${3:x}, ${4:y}, ${5:z})" },
		{ "trigger": "GetPlayerDistanceFromPoint", "contents": "GetPlayerDistanceFromPoint(${1:playerid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "IsPlayerStreamedIn", "contents": "IsPlayerStreamedIn(${1:playerid}, ${2:forplayerid})" },
		{ "trigger": "SetPlayerInterior", "contents": "SetPlayerInterior(${1:playerid,interiorid})" },
		{ "trigger": "GetPlayerInterior", "contents": "GetPlayerInterior(${1:playerid})" },
		{ "trigger": "SetPlayerHealth", "contents": "SetPlayerHealth(${1:playerid}, ${2:health})" },
		{ "trigger": "GetPlayerHealth", "contents": "GetPlayerHealth(${1:playerid}, ${2:&health})" },
		{ "trigger": "SetPlayerArmour", "contents": "SetPlayerArmour(${1:playerid}, ${2:armour})" },
		{ "trigger": "GetPlayerArmour", "contents": "GetPlayerArmour(${1:playerid}, ${2:&armour})" },
		{ "trigger": "SetPlayerAmmo", "contents": "SetPlayerAmmo(${1:playerid}, ${2:weaponslot}, ${3:ammo})" },
		{ "trigger": "GetPlayerAmmo", "contents": "GetPlayerAmmo(${1:playerid})" },
		{ "trigger": "GetPlayerWeaponState", "contents": "GetPlayerWeaponState(${1:playerid})" },
		{ "trigger": "GetPlayerTargetPlayer", "contents": "GetPlayerTargetPlayer(${1:playerid})" },
		{ "trigger": "SetPlayerTeam", "contents": "SetPlayerTeam(${1:playerid}, ${2:teamid})" },
		{ "trigger": "GetPlayerTeam", "contents": "GetPlayerTeam(${1:playerid})" },
		{ "trigger": "SetPlayerScore", "contents": "SetPlayerScore(${1:playerid,score})" },
		{ "trigger": "GetPlayerScore", "contents": "GetPlayerScore(${1:playerid})" },
		{ "trigger": "GetPlayerDrunkLevel", "contents": "GetPlayerDrunkLevel(${1:playerid})" },
		{ "trigger": "SetPlayerDrunkLevel", "contents": "SetPlayerDrunkLevel(${1:playerid}, ${2:level})" },
		{ "trigger": "SetPlayerColor", "contents": "SetPlayerColor(${1:playerid,color})" },
		{ "trigger": "GetPlayerColor", "contents": "GetPlayerColor(${1:playerid})" },
		{ "trigger": "SetPlayerSkin", "contents": "SetPlayerSkin(${1:playerid}, ${2:skinid})" },
		{ "trigger": "GetPlayerSkin", "contents": "GetPlayerSkin(${1:playerid})" },
		{ "trigger": "GivePlayerWeapon", "contents": "GivePlayerWeapon(${1:playerid}, ${2:weaponid}, ${3:ammo})" },
		{ "trigger": "ResetPlayerWeapons", "contents": "ResetPlayerWeapons(${1:playerid})" },
		{ "trigger": "SetPlayerArmedWeapon", "contents": "SetPlayerArmedWeapon(${1:playerid}, ${2:weaponid})" },
		{ "trigger": "GetPlayerWeaponData", "contents": "GetPlayerWeaponData(${1:playerid}, ${2:slot}, ${3:&weapons}, ${4:&ammo})" },
		{ "trigger": "GivePlayerMoney", "contents": "GivePlayerMoney(${1:playerid,money})" },
		{ "trigger": "ResetPlayerMoney", "contents": "ResetPlayerMoney(${1:playerid})" },
		{ "trigger": "SetPlayerName", "contents": "SetPlayerName(${1:playerid}, ${2:name[]})" },
		{ "trigger": "GetPlayerMoney", "contents": "GetPlayerMoney(${1:playerid})" },
		{ "trigger": "GetPlayerState", "contents": "GetPlayerState(${1:playerid})" },
		{ "trigger": "GetPlayerIp", "contents": "GetPlayerIp(${1:playerid}, ${2:name[]}, ${3:len})" },
		{ "trigger": "GetPlayerPing", "contents": "GetPlayerPing(${1:playerid})" },
		{ "trigger": "GetPlayerWeapon", "contents": "GetPlayerWeapon(${1:playerid})" },
		{ "trigger": "GetPlayerKeys", "contents": "GetPlayerKeys(${1:playerid}, ${2:&keys}, ${3:&updown}, ${4:&leftright})" },
		{ "trigger": "GetPlayerName", "contents": "GetPlayerName(${1:playerid}, ${2:name[]}, ${3:len})" },
		{ "trigger": "SetPlayerTime", "contents": "SetPlayerTime(${1:playerid}, ${2:hour}, ${3:minute})" },
		{ "trigger": "GetPlayerTime", "contents": "GetPlayerTime(${1:playerid}, ${2:&hour}, ${3:&minute})" },
		{ "trigger": "TogglePlayerClock", "contents": "TogglePlayerClock(${1:playerid}, ${2:toggle})" },
		{ "trigger": "SetPlayerWeather", "contents": "SetPlayerWeather(${1:playerid}, ${2:weather})" },
		{ "trigger": "ForceClassSelection", "contents": "ForceClassSelection(${1:playerid})" },
		{ "trigger": "SetPlayerWantedLevel", "contents": "SetPlayerWantedLevel(${1:playerid}, ${2:level})" },
		{ "trigger": "GetPlayerWantedLevel", "contents": "GetPlayerWantedLevel(${1:playerid})" },
		{ "trigger": "SetPlayerFightingStyle", "contents": "SetPlayerFightingStyle(${1:playerid}, ${2:style})" },
		{ "trigger": "GetPlayerFightingStyle", "contents": "GetPlayerFightingStyle(${1:playerid})" },
		{ "trigger": "SetPlayerVelocity", "contents": "SetPlayerVelocity(${1:playerid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "GetPlayerVelocity", "contents": "GetPlayerVelocity(${1: playerid}, ${2:&X}, ${3:&Y}, ${4:&Z })" },
		{ "trigger": "PlayCrimeReportForPlayer", "contents": "PlayCrimeReportForPlayer(${1:playerid}, ${2:suspectid}, ${3:crime})" },
		{ "trigger": "PlayAudioStreamForPlayer", "contents": "PlayAudioStreamForPlayer(${1:playerid}, ${2:url[]})" },
		{ "trigger": "StopAudioStreamForPlayer", "contents": "StopAudioStreamForPlayer(${1:playerid})" },
		{ "trigger": "SetPlayerShopName", "contents": "SetPlayerShopName(${1:playerid}, ${2:shopname[]})" },
		{ "trigger": "SetPlayerSkillLevel", "contents": "SetPlayerSkillLevel(${1:playerid}, ${2:skill}, ${3:level})" },
		{ "trigger": "GetPlayerSurfingVehicleID", "contents": "GetPlayerSurfingVehicleID(${1:playerid})" },
		{ "trigger": "GetPlayerSurfingObjectID", "contents": "GetPlayerSurfingObjectID(${1:playerid})" },
		{ "trigger": "RemoveBuildingForPlayer", "contents": "RemoveBuildingForPlayer(${1:playerid}, ${2:modelid}, ${3:fX}, ${4:fY}, ${5:fZ}, ${6:fRadius})" },
		{ "trigger": "SetPlayerAttachedObject", "contents": "SetPlayerAttachedObject(${1:playerid}, ${2:index}, ${3:modelid}, ${4:bone})" },
		{ "trigger": "RemovePlayerAttachedObject", "contents": "RemovePlayerAttachedObject(${1:playerid}, ${2:index})" },
		{ "trigger": "IsPlayerAttachedObjectSlotUsed", "contents": "IsPlayerAttachedObjectSlotUsed(${1:playerid}, ${2:index})" },
		{ "trigger": "EditAttachedObject", "contents": "EditAttachedObject(${1:playerid}, ${2:index})" },
		{ "trigger": "PlayerCreatePlayerTextDraw", "contents": "PlayerCreatePlayerTextDraw(${1:playerid}, ${2:x}, ${3:y}, ${4:text[]})" },
		{ "trigger": "PlayerTextDrawDestroy", "contents": "PlayerTextDrawDestroy(${1:playerid}, ${2:Playertext})" },
		{ "trigger": "PlayerTextDrawLetterSize", "contents": "PlayerTextDrawLetterSize(${1:playerid}, ${2:Playertext}, ${3:x}, ${4:y})" },
		{ "trigger": "PlayerTextDrawTextSize", "contents": "PlayerTextDrawTextSize(${1:playerid}, ${2:Playertext}, ${3:x}, ${4:y})" },
		{ "trigger": "PlayerTextDrawAlignment", "contents": "PlayerTextDrawAlignment(${1:playerid}, ${2:Playertext}, ${3:alignment})" },
		{ "trigger": "PlayerTextDrawColor", "contents": "PlayerTextDrawColor(${1:playerid}, ${2:Playertext}, ${3:color})" },
		{ "trigger": "PlayerTextDrawUseBox", "contents": "PlayerTextDrawUseBox(${1:playerid}, ${2:Playertext}, ${3:use})" },
		{ "trigger": "PlayerTextDrawBoxColor", "contents": "PlayerTextDrawBoxColor(${1:playerid}, ${2:Playertext}, ${3:color})" },
		{ "trigger": "PlayerTextDrawSetShadow", "contents": "PlayerTextDrawSetShadow(${1:playerid}, ${2:Playertext}, ${3:size})" },
		{ "trigger": "PlayerTextDrawSetOutline", "contents": "PlayerTextDrawSetOutline(${1:playerid}, ${2:Playertext}, ${3:size})" },
		{ "trigger": "PlayerTextDrawBackgroundColor", "contents": "PlayerTextDrawBackgroundColor(${1:playerid}, ${2:Playertext}, ${3:color})" },
		{ "trigger": "PlayerTextDrawFont", "contents": "PlayerTextDrawFont(${1:playerid}, ${2:Playertext}, ${3:font})" },
		{ "trigger": "PlayerTextDrawSetProportional", "contents": "PlayerTextDrawSetProportional(${1:playerid}, ${2:Playertext}, ${3:set})" },
		{ "trigger": "PlayerTextDrawSetSelectable", "contents": "PlayerTextDrawSetSelectable(${1:playerid}, ${2:Playertext}, ${3:set})" },
		{ "trigger": "PlayerTextDrawShow", "contents": "PlayerTextDrawShow(${1:playerid}, ${2:Playertext})" },
		{ "trigger": "PlayerTextDrawHide", "contents": "PlayerTextDrawHide(${1:playerid}, ${2:Playertext})" },
		{ "trigger": "PlayerTextDrawSetString", "contents": "PlayerTextDrawSetString(${1:playerid}, ${2:Playertext}, ${3:string[]})" },
		{ "trigger": "PlayerTextDrawSetPreviewModel", "contents": "PlayerTextDrawSetPreviewModel(${1:playerid}, ${2:Playertext}, ${3:modelindex})" },
		{ "trigger": "PlayerTextDrawSetPreviewRot", "contents": "PlayerTextDrawSetPreviewRot(${1:playerid}, ${2:Playertext}, ${3:fRotX}, ${4:fRotY}, ${5:fRotZ})" },
		{ "trigger": "PlayerTextDrawSetPreviewVehCol", "contents": "PlayerTextDrawSetPreviewVehCol(${1:playerid}, ${2:Playertext}, ${3:color1}, ${4:color2})" },
		{ "trigger": "SetPVarInt", "contents": "SetPVarInt(${1:playerid}, ${2:varname[]}, ${3:int_value})" },
		{ "trigger": "GetPVarInt", "contents": "GetPVarInt(${1:playerid}, ${2:varname[]})" },
		{ "trigger": "SetPVarString", "contents": "SetPVarString(${1:playerid}, ${2:varname[]}, ${3:string_value[]})" },
		{ "trigger": "GetPVarString", "contents": "GetPVarString(${1:playerid}, ${2:varname[]}, ${3:string_return[]}, ${4:len})" },
		{ "trigger": "SetPVarFloat", "contents": "SetPVarFloat(${1:playerid}, ${2:varname[]}, ${3:float_value})" },
		{ "trigger": "GetPVarFloat", "contents": "GetPVarFloat(${1:playerid}, ${2:varname[]})" },
		{ "trigger": "DeletePVar", "contents": "DeletePVar(${1:playerid}, ${2:varname[]})" },
		{ "trigger": "GetPVarsUpperIndex", "contents": "GetPVarsUpperIndex(${1:playerid})" },
		{ "trigger": "GetPVarNameAtIndex", "contents": "GetPVarNameAtIndex(${1:playerid}, ${2:index}, ${3:ret_varname[]}, ${4:ret_len})" },
		{ "trigger": "GetPVarType", "contents": "GetPVarType(${1:playerid}, ${2:varname[]})" },
		{ "trigger": "SetPlayerChatBubble", "contents": "SetPlayerChatBubble(${1:playerid}, ${2:text[]}, ${3:color}, ${4:drawdistance}, ${5:expiretime})" },
		{ "trigger": "PutPlayerInVehicle", "contents": "PutPlayerInVehicle(${1:playerid}, ${2:vehicleid}, ${3:seatid})" },
		{ "trigger": "GetPlayerVehicleID", "contents": "GetPlayerVehicleID(${1:playerid})" },
		{ "trigger": "GetPlayerVehicleSeat", "contents": "GetPlayerVehicleSeat(${1:playerid})" },
		{ "trigger": "RemovePlayerFromVehicle", "contents": "RemovePlayerFromVehicle(${1:playerid})" },
		{ "trigger": "TogglePlayerControllable", "contents": "TogglePlayerControllable(${1:playerid}, ${2:toggle})" },
		{ "trigger": "PlayerPlaySound", "contents": "PlayerPlaySound(${1:playerid}, ${2:soundid}, ${3:x}, ${4:y}, ${5:z})" },
		{ "trigger": "ApplyAnimation", "contents": "ApplyAnimation(${1:playerid}, ${2:animlib[]}, ${3:animname[]}, ${4:fDelta}, ${5:loop}, ${6:lockx}, ${7:locky}, ${8:freeze}, ${9:time})" },
		{ "trigger": "ClearAnimations", "contents": "ClearAnimations(${1:playerid})" },
		{ "trigger": "GetPlayerAnimationIndex", "contents": "GetPlayerAnimationIndex(${1:playerid})" },
		{ "trigger": "GetAnimationName", "contents": "GetAnimationName(${1:index}, ${2:animlib[]}, ${3:len1}, ${4:animname[]}, ${5:len2})" },
		{ "trigger": "GetPlayerSpecialAction", "contents": "GetPlayerSpecialAction(${1:playerid})" },
		{ "trigger": "SetPlayerSpecialAction", "contents": "SetPlayerSpecialAction(${1:playerid,actionid})" },
		{ "trigger": "SetPlayerCheckpoint", "contents": "SetPlayerCheckpoint(${1:playerid}, ${2:x}, ${3:y}, ${4:z}, ${5:size})" },
		{ "trigger": "DisablePlayerCheckpoint", "contents": "DisablePlayerCheckpoint(${1:playerid})" },
		{ "trigger": "SetPlayerRaceCheckpoint", "contents": "SetPlayerRaceCheckpoint(${1:playerid}, ${2:type}, ${3:x}, ${4:y}, ${5:z}, ${6:nextx}, ${7:nexty}, ${8:nextz}, ${9:size})" },
		{ "trigger": "DisablePlayerRaceCheckpoint", "contents": "DisablePlayerRaceCheckpoint(${1:playerid})" },
		{ "trigger": "SetPlayerWorldBounds", "contents": "SetPlayerWorldBounds(${1:playerid,x_max,x_min,y_max,y_min})" },
		{ "trigger": "SetPlayerMarkerForPlayer", "contents": "SetPlayerMarkerForPlayer(${1:playerid}, ${2:showplayerid}, ${3:color})" },
		{ "trigger": "ShowPlayerNameTagForPlayer", "contents": "ShowPlayerNameTagForPlayer(${1:playerid}, ${2:showplayerid}, ${3:show})" },
		{ "trigger": "SetPlayerMapIcon", "contents": "SetPlayerMapIcon(${1:playerid}, ${2:iconid}, ${3:x}, ${4:y}, ${5:z}, ${6:markertype}, ${7:color})" },
		{ "trigger": "RemovePlayerMapIcon", "contents": "RemovePlayerMapIcon(${1:playerid}, ${2:iconid})" },
		{ "trigger": "AllowPlayerTeleport", "contents": "AllowPlayerTeleport(${1:playerid}, ${2:allow})" },
		{ "trigger": "SetPlayerCameraPos", "contents": "SetPlayerCameraPos(${1:playerid,x}, ${2:y}, ${3:z})" },
		{ "trigger": "SetPlayerCameraLookAt", "contents": "SetPlayerCameraLookAt(${1:playerid}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "SetCameraBehindPlayer", "contents": "SetCameraBehindPlayer(${1:playerid})" },
		{ "trigger": "GetPlayerCameraPos", "contents": "GetPlayerCameraPos(${1:playerid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "GetPlayerCameraFrontVector", "contents": "GetPlayerCameraFrontVector(${1:playerid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "GetPlayerCameraMode", "contents": "GetPlayerCameraMode(${1:playerid})" },
		{ "trigger": "AttachCameraToObject", "contents": "AttachCameraToObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "AttachCameraToPlayerObject", "contents": "AttachCameraToPlayerObject(${1:playerid}, ${2:playerobjectid})" },
		{ "trigger": "InterpolateCameraPos", "contents": "InterpolateCameraPos(${1:playerid}, ${2:FromX}, ${3:FromY}, ${4:FromZ}, ${5:ToX}, ${6:ToY}, ${7:ToZ}, ${8:time})" },
		{ "trigger": "InterpolateCameraLookAt", "contents": "InterpolateCameraLookAt(${1:playerid}, ${2:FromX}, ${3:FromY}, ${4:FromZ}, ${5:ToX}, ${6:ToY}, ${7:ToZ}, ${8:time})" },
		{ "trigger": "IsPlayerConnected", "contents": "IsPlayerConnected(${1:playerid})" },
		{ "trigger": "IsPlayerInVehicle", "contents": "IsPlayerInVehicle(${1:playerid}, ${2:vehicleid})" },
		{ "trigger": "IsPlayerInAnyVehicle", "contents": "IsPlayerInAnyVehicle(${1:playerid})" },
		{ "trigger": "IsPlayerInCheckpoint", "contents": "IsPlayerInCheckpoint(${1:playerid})" },
		{ "trigger": "IsPlayerInRaceCheckpoint", "contents": "IsPlayerInRaceCheckpoint(${1:playerid})" },
		{ "trigger": "SetPlayerVirtualWorld", "contents": "SetPlayerVirtualWorld(${1:playerid}, ${2:worldid})" },
		{ "trigger": "GetPlayerVirtualWorld", "contents": "GetPlayerVirtualWorld(${1:playerid})" },
		{ "trigger": "EnableStuntBonusForPlayer", "contents": "EnableStuntBonusForPlayer(${1:playerid}, ${2:enable})" },
		{ "trigger": "EnableStuntBonusForAll", "contents": "EnableStuntBonusForAll(${1:enable})" },
		{ "trigger": "TogglePlayerSpectating", "contents": "TogglePlayerSpectating(${1:playerid}, ${2:toggle})" },
		{ "trigger": "PlayerSpectatePlayer", "contents": "PlayerSpectatePlayer(${1:playerid}, ${2:targetplayerid})" },
		{ "trigger": "PlayerSpectateVehicle", "contents": "PlayerSpectateVehicle(${1:playerid}, ${2:targetvehicleid})" },
		{ "trigger": "StartRecordingPlayerData", "contents": "StartRecordingPlayerData(${1:playerid}, ${2:recordtype}, ${3:recordname[]})" },
		{ "trigger": "StopRecordingPlayerData", "contents": "StopRecordingPlayerData(${1:playerid})" },
		{ "trigger": "SelectTextDraw", "contents": "SelectTextDraw(${1:playerid}, ${2:hovercolor})" },
		{ "trigger": "CancelSelectTextDraw", "contents": "CancelSelectTextDraw(${1:playerid})" },
		{ "trigger": "CreateObject", "contents": "CreateObject(${1:modelid}, ${2:X}, ${3:Y}, ${4:Z}, ${5:rX}, ${6:rY}, ${7:rZ})" },
		{ "trigger": "AttachObjectToVehicle", "contents": "AttachObjectToVehicle(${1:objectid}, ${2:vehicleid}, ${3:OffsetX}, ${4:OffsetY}, ${5:OffsetZ}, ${6:RotX}, ${7:RotY}, ${8:RotZ})" },
		{ "trigger": "AttachObjectToObject", "contents": "AttachObjectToObject(${1:objectid}, ${2:attachtoid}, ${3:OffsetX}, ${4:OffsetY}, ${5:OffsetZ}, ${6:RotX}, ${7:RotY}, ${8:RotZ})" },
		{ "trigger": "AttachObjectToPlayer", "contents": "AttachObjectToPlayer(${1:objectid}, ${2:playerid}, ${3:OffsetX}, ${4:OffsetY}, ${5:OffsetZ}, ${6:RotX}, ${7:RotY}, ${8:RotZ})" },
		{ "trigger": "SetObjectPos", "contents": "SetObjectPos(${1:objectid}, ${2:X}, ${3:Y}, ${4:Z})" },
		{ "trigger": "GetObjectPos", "contents": "GetObjectPos(${1:objectid}, ${2:&X}, ${3:&Y}, ${4:&Z})" },
		{ "trigger": "SetObjectRot", "contents": "SetObjectRot(${1:objectid}, ${2:RotX}, ${3:RotY}, ${4:RotZ})" },
		{ "trigger": "GetObjectRot", "contents": "GetObjectRot(${1:objectid}, ${2:&RotX}, ${3:&RotY}, ${4:&RotZ})" },
		{ "trigger": "IsValidObject", "contents": "IsValidObject(${1:objectid})" },
		{ "trigger": "DestroyObject", "contents": "DestroyObject(${1:objectid})" },
		{ "trigger": "MoveObject", "contents": "MoveObject(${1:objectid}, ${2:X}, ${3:Y}, ${4:Z}, ${5:Speed})" },
		{ "trigger": "StopObject", "contents": "StopObject(${1:objectid})" },
		{ "trigger": "IsObjectMoving", "contents": "IsObjectMoving(${1:objectid})" },
		{ "trigger": "EditObject", "contents": "EditObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "EditPlayerObject", "contents": "EditPlayerObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "SelectObject", "contents": "SelectObject(${1:playerid})" },
		{ "trigger": "CancelEdit", "contents": "CancelEdit(${1:playerid})" },
		{ "trigger": "CreatePlayerObject", "contents": "CreatePlayerObject(${1:playerid}, ${2:modelid}, ${3:X}, ${4:Y}, ${5:Z}, ${6:rX}, ${7:rY}, ${8:rZ})" },
		{ "trigger": "AttachPlayerObjectToVehicle", "contents": "AttachPlayerObjectToVehicle(${1:playerid}, ${2:objectid}, ${3:vehicleid}, ${4:fOffsetX}, ${5:fOffsetY}, ${6:fOffsetZ}, ${7:fRotX}, ${8:fRotY}, ${9:RotZ})" },
		{ "trigger": "SetPlayerObjectPos", "contents": "SetPlayerObjectPos(${1:playerid}, ${2:objectid}, ${3:X}, ${4:Y}, ${5:Z})" },
		{ "trigger": "GetPlayerObjectPos", "contents": "GetPlayerObjectPos(${1:playerid}, ${2:objectid}, ${3:&X}, ${4:&Y}, ${5:&Z})" },
		{ "trigger": "SetPlayerObjectRot", "contents": "SetPlayerObjectRot(${1:playerid}, ${2:objectid}, ${3:RotX}, ${4:RotY}, ${5:RotZ})" },
		{ "trigger": "GetPlayerObjectRot", "contents": "GetPlayerObjectRot(${1:playerid}, ${2:objectid}, ${3:&RotX}, ${4:&RotY}, ${5:&RotZ})" },
		{ "trigger": "IsValidPlayerObject", "contents": "IsValidPlayerObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "DestroyPlayerObject", "contents": "DestroyPlayerObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "MovePlayerObject", "contents": "MovePlayerObject(${1:playerid}, ${2:objectid}, ${3:X}, ${4:Y}, ${5:Z}, ${6:Speed})" },
		{ "trigger": "StopPlayerObject", "contents": "StopPlayerObject(${1:playerid}, ${2:objectid})" },
		{ "trigger": "IsPlayerObjectMoving", "contents": "IsPlayerObjectMoving(${1:playerid}, ${2:objectid})" },
		{ "trigger": "AttachPlayerObjectToPlayer", "contents": "AttachPlayerObjectToPlayer(${1:objectplayer}, ${2:objectid}, ${3:attachplayer}, ${4:OffsetX}, ${5:OffsetY}, ${6:OffsetZ}, ${7:rX}, ${8:rY}, ${9:rZ})" },
		{ "trigger": "SetObjectMaterial", "contents": "SetObjectMaterial(${1:objectid}, ${2:materialindex}, ${3:modelid}, ${4:txdname[]}, ${5:texturename[]})" },
		{ "trigger": "SetPlayerObjectMaterial", "contents": "SetPlayerObjectMaterial(${1:playerid}, ${2:objectid}, ${3:materialindex}, ${4:modelid}, ${5:txdname[]}, ${6:texturename[]})" },
		{ "trigger": "SetObjectMaterialText", "contents": "SetObjectMaterialText(${1:objectid}, ${2:text[]})" },
		{ "trigger": "SetPlayerObjectMaterialText", "contents": "SetPlayerObjectMaterialText(${1:playerid}, ${2:objectid}, ${3:text[]})" },
		{ "trigger": "print", "contents": "print(${1:string[]})" },
		{ "trigger": "printf", "contents": "printf(${1:format[]}, ${2:{Float,_}:...})" },
		{ "trigger": "format", "contents": "format(${1:output[]}, ${2:len}, ${3:format[]}, ${4:{Float,_}:...})" },
		{ "trigger": "SetTimer", "contents": "SetTimer(${1:funcname[]}, ${2:interval}, ${3:repeating})" },
		{ "trigger": "KillTimer", "contents": "KillTimer(${1:timerid})" },
		{ "trigger": "GetTickCount", "contents": "GetTickCount()" },
		{ "trigger": "asin", "contents": "asin(${1:value})" },
		{ "trigger": "acos", "contents": "acos(${1:value})" },
		{ "trigger": "atan", "contents": "atan(${1:value})" },
		{ "trigger": "atan2", "contents": "atan2(${1:x}, ${2:y})" },
		{ "trigger": "SendChat", "contents": "SendChat(${1:msg[]})" },
		{ "trigger": "SendCommand", "contents": "SendCommand(${1:commandtext[]})" },
		{ "trigger": "GetPlayerState", "contents": "GetPlayerState(${1:playerid})" },
		{ "trigger": "GetPlayerPos", "contents": "GetPlayerPos(${1:playerid}, ${2:&x}, ${3:&y}, ${4:&z})" },
		{ "trigger": "GetPlayerVehicleID", "contents": "GetPlayerVehicleID(${1:playerid})" },
		{ "trigger": "GetPlayerArmedWeapon", "contents": "GetPlayerArmedWeapon(${1:playerid})" },
		{ "trigger": "GetPlayerHealth", "contents": "GetPlayerHealth(${1:playerid})" },
		{ "trigger": "GetPlayerArmour", "contents": "GetPlayerArmour(${1:playerid})" },
		{ "trigger": "GetPlayerSpecialAction", "contents": "GetPlayerSpecialAction(${1:playerid})" },
		{ "trigger": "IsPlayerStreamedIn", "contents": "IsPlayerStreamedIn(${1:playerid})" },
		{ "trigger": "IsVehicleStreamedIn", "contents": "IsVehicleStreamedIn(${1:vehicleid})" },
		{ "trigger": "GetPlayerKeys", "contents": "GetPlayerKeys(${1:playerid}, ${2:&keys}, ${3:&updown}, ${4:&leftright})" },
		{ "trigger": "GetPlayerFacingAngle", "contents": "GetPlayerFacingAngle(${1:playerid}, ${2:&ang})" },
		{ "trigger": "GetMyPos", "contents": "GetMyPos(${1:&x}, ${2:&y}, ${3:&z})" },
		{ "trigger": "SetMyPos", "contents": "SetMyPos(${1:x}, ${2:y}, ${3:z})" },
		{ "trigger": "GetMyFacingAngle", "contents": "GetMyFacingAngle(${1:&ang})" },
		{ "trigger": "SetMyFacingAngle", "contents": "SetMyFacingAngle(${1:ang})" },
		{ "trigger": "GetDistanceFromMeToPoint", "contents": "GetDistanceFromMeToPoint(${1:X}, ${2:Y}, ${3:Z}, ${4:&Distance})" },
		{ "trigger": "IsPlayerInRangeOfPoint", "contents": "IsPlayerInRangeOfPoint(${1:playerid}, ${2:range}, ${3:X}, ${4:Y}, ${5:Z})" },
		{ "trigger": "GetPlayerName", "contents": "GetPlayerName(${1:playerid}, ${2:name[]}, ${3:len})" },
		{ "trigger": "IsPlayerConnected", "contents": "IsPlayerConnected(${1:playerid})" },
		{ "trigger": "StartRecordingPlayback", "contents": "StartRecordingPlayback(${1:playbacktype}, ${2:recordname[]})" },
		{ "trigger": "StopRecordingPlayback", "contents": "StopRecordingPlayback()" },
		{ "trigger": "PauseRecordingPlayback", "contents": "PauseRecordingPlayback()" },
		{ "trigger": "ResumeRecordingPlayback", "contents": "ResumeRecordingPlayback()" },
		{ "trigger": "OnNPCModeInit", "contents": "OnNPCModeInit()" },
		{ "trigger": "OnNPCModeExit", "contents": "OnNPCModeExit()" },
		{ "trigger": "OnNPCConnect", "contents": "OnNPCConnect(${1:myplayerid})" },
		{ "trigger": "OnNPCDisconnect", "contents": "OnNPCDisconnect(${1:reason[]})" },
		{ "trigger": "OnNPCSpawn", "contents": "OnNPCSpawn()" },
		{ "trigger": "OnNPCEnterVehicle", "contents": "OnNPCEnterVehicle(${1:vehicleid}, ${2:seatid})" },
		{ "trigger": "OnNPCExitVehicle", "contents": "OnNPCExitVehicle()" },
		{ "trigger": "OnClientMessage", "contents": "OnClientMessage(${1:color}, ${2:text[]})" },
		{ "trigger": "OnPlayerDeath", "contents": "OnPlayerDeath(${1:playerid})" },
		{ "trigger": "OnPlayerText", "contents": "OnPlayerText(${1:playerid}, ${2:text[]})" },
		{ "trigger": "OnPlayerStreamIn", "contents": "OnPlayerStreamIn(${1:playerid})" },
		{ "trigger": "OnPlayerStreamOut", "contents": "OnPlayerStreamOut(${1:playerid})" },
		{ "trigger": "OnVehicleStreamIn", "contents": "OnVehicleStreamIn(${1:vehicleid})" },
		{ "trigger": "OnVehicleStreamOut", "contents": "OnVehicleStreamOut(${1:vehicleid})" },
		{ "trigger": "OnRecordingPlaybackEnd", "contents": "OnRecordingPlaybackEnd()" },
		{ "trigger": "HTTP", "contents": "HTTP(${1:index}, ${2:type}, ${3:url[]}, ${4:data[]}, ${5:callback[]})" },"STREAMER_TYPE_OBJECT",
		
		/*
			███████╗ █████╗       ███╗   ███╗██████╗       ██████╗ ██╗     ██╗   ██╗███████╗
			██╔════╝██╔══██╗      ████╗ ████║██╔══██╗      ██╔══██╗██║     ██║   ██║██╔════╝
			███████╗███████║█████╗██╔████╔██║██████╔╝█████╗██████╔╝██║     ██║   ██║███████╗
			╚════██║██╔══██║╚════╝██║╚██╔╝██║██╔═══╝ ╚════╝██╔═══╝ ██║     ██║   ██║╚════██║
			███████║██║  ██║      ██║ ╚═╝ ██║██║           ██║     ███████╗╚██████╔╝███████║
			╚══════╝╚═╝  ╚═╝      ╚═╝     ╚═╝╚═╝           ╚═╝     ╚══════╝ ╚═════╝ ╚══════╝
		*/

		{ "trigger": "GetPlayerAircraftHeight", "contents": "GetPlayerAircraftHeight(${1:playerid})" },
		{ "trigger": "GetPlayerJetpackHeight", "contents": "GetPlayerJetpackHeight(${1:playerid})" },
		{ "trigger": "GetPlayerRadioStation", "contents": "GetPlayerRadioStation(${1:playerid})" },
		{ "trigger": "GetPlayerResolution", "contents": "GetPlayerResolution(${1:playerid}, ${2:&X}, ${3:&Y})" },
		{ "trigger": "GetPlayerVehicleBlips", "contents": "GetPlayerVehicleBlips(${1:playerid})" },
		{ "trigger": "IsPlayerInPauseMenu", "contents": "IsPlayerInPauseMenu(${1:playerid})" },
		{ "trigger": "IsUsingSAMPP", "contents": "IsUsingSAMPP(${1:playerid})" },
		{ "trigger": "OnDriverDriveByShot", "contents": "OnDriverDriveByShot(${1:playerid})" },
		{ "trigger": "OnPlayerChangeRadioStation", "contents": "OnPlayerChangeRadioStation(${1:playerid}, ${2:stationid}, ${3:vehicleid})" },
		{ "trigger": "OnPlayerClick", "contents": "OnPlayerClick(${1:playerid}, ${2:type}, ${3:X}, ${4:Y})" },
		{ "trigger": "OnPlayerClosePauseMenu", "contents": "OnPlayerClosePauseMenu(${1:playerid})" },
		{ "trigger": "OnPlayerDrinkSprunk", "contents": "OnPlayerDrinkSprunk(${1:playerid})" },
		{ "trigger": "OnPlayerEnterPauseSubmenu", "contents": "OnPlayerEnterPauseSubmenu(${1:playerid}, ${2:from}, ${3:to})" },
		{ "trigger": "OnPlayerOpenPauseMenu", "contents": "OnPlayerOpenPauseMenu(${1:playerid})" },
		{ "trigger": "OnPlayerResolutionChange", "contents": "OnPlayerResolutionChange(${1:playerid}, ${2:X}, ${3:Y})" },
		{ "trigger": "OnPlayerSAMPPConnect", "contents": "OnPlayerSAMPPConnect(${1:address[]}, ${2:port})" },
		{ "trigger": "OnPlayerSAMPPJoin", "contents": "OnPlayerSAMPPJoin(${1:playerid}, ${2:bool:has_plugin})" },
		{ "trigger": "OnPlayerStunt", "contents": "OnPlayerStunt(${1:playerid}, ${2:stuntid}, ${3:money}, ${4:details[]})" },
		{ "trigger": "SAMPP_ExecuteCallback", "contents": "SAMPP_ExecuteCallback(${1:type}, ${2:Float}, ${3:_:...})" },
		{ "trigger": "SAMPP_OnPlayerConnect", "contents": "SAMPP_OnPlayerConnect(${1:playerid})" },
		{ "trigger": "SAMPP_OnPlayerDisconnect", "contents": "SAMPP_OnPlayerDisconnect(${1:playerid}, ${2:reason})" },
		{ "trigger": "SetPlayerAircraftHeight", "contents": "SetPlayerAircraftHeight(${1:playerid}, ${2:Float:height})" },
		{ "trigger": "SetPlayerBlurIntensity", "contents": "SetPlayerBlurIntensity(${1:playerid}, ${2:intensity})" },
		{ "trigger": "SetPlayerCheckpointColour", "contents": "SetPlayerCheckpointColour(${1:playerid}, ${2:colour})" },
		{ "trigger": "SetPlayerCheckpointEx", "contents": "SetPlayerCheckpointEx(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:size}, ${6:colour=0xFF000020}, ${7:period=1024}, ${8:Float:pulse=0.1}, ${9:rotation_rate=0}, ${10:bool:check_z=true})" },
		{ "trigger": "SetPlayerGameSpeed", "contents": "SetPlayerGameSpeed(${1:playerid}, ${2:Float:speed})" },
		{ "trigger": "SetPlayerHUDComponentColour", "contents": "SetPlayerHUDComponentColour(${1:playerid}, ${2:componentid}, ${3:colour})" },
		{ "trigger": "SetPlayerJetpackHeight", "contents": "SetPlayerJetpackHeight(${1:playerid}, ${2:Float:height})" },
		{ "trigger": "SetPlayerNoReload", "contents": "SetPlayerNoReload(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "SetPlayerPedAnims", "contents": "SetPlayerPedAnims(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "SetPlayerRaceCheckpointColour", "contents": "SetPlayerRaceCheckpointColour(${1:playerid}, ${2:colour})" },
		{ "trigger": "SetPlayerRaceCheckpointEx", "contents": "SetPlayerRaceCheckpointEx(${1:playerid}, ${2:type}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:point_x}, ${7:Float:point_y}, ${8:Float:point_z}, ${9:Float:size}, ${10:colour=0xFF000020}, ${11:period=1024}, ${12:Float:pulse=0.1}, ${13:rotation_rate=0})" },
		{ "trigger": "SetRadioStationForPlayer", "contents": "SetRadioStationForPlayer(${1:playerid}, ${2:stationid})" },
		{ "trigger": "SetWaveHeightForAll", "contents": "SetWaveHeightForAll(${1:Float:height})" },
		{ "trigger": "SetWaveHeightForPlayer", "contents": "SetWaveHeightForPlayer(${1:playerid}, ${2:Float:height})" },
		{ "trigger": "ToggleHUDComponentForPlayer", "contents": "ToggleHUDComponentForPlayer(${1:playerid}, ${2:componentid}, ${3:bool:toggle})" },
		{ "trigger": "ToggleNightVision", "contents": "ToggleNightVision(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePauseMenuAbility", "contents": "TogglePauseMenuAbility(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerAction", "contents": "TogglePlayerAction(${1:playerid}, ${2:actionid}, ${3:bool:toggle})" },
		{ "trigger": "TogglePlayerDriveOnWater", "contents": "TogglePlayerDriveOnWater(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerFrozen", "contents": "TogglePlayerFrozen(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerInfiniteOxygen", "contents": "TogglePlayerInfiniteOxygen(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerInfiniteRun", "contents": "TogglePlayerInfiniteRun(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerSwitchReload", "contents": "TogglePlayerSwitchReload(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "TogglePlayerVehicleBlips", "contents": "TogglePlayerVehicleBlips(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "ToggleThermalVision", "contents": "ToggleThermalVision(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "ToggleUnderwaterEffect", "contents": "ToggleUnderwaterEffect(${1:playerid}, ${2:bool:toggle})" },
		{ "trigger": "ToggleWaterBuoyancy", "contents": "ToggleWaterBuoyancy(${1:playerid}, ${2:bool:toggle})" },
		
		{},

		"DEFAULT_AIRCRAFT_HEIGHT",
		"DEFAULT_BLUR_INTENSITY",
		"DEFAULT_JETPACK_HEIGHT",
		"HUD_COLOUR_AMMO",
		"HUD_COLOUR_ARMOUR",
		"HUD_COLOUR_BREATH",
		"HUD_COLOUR_HEALTH",
		"HUD_COLOUR_MONEY_NEGATIVE",
		"HUD_COLOUR_MONEY_POSITIVE",
		"HUD_COLOUR_RADIO_TUNED",
		"HUD_COLOUR_RADIO_UNTUNED",
		"HUD_COLOUR_WANTED_LEVEL",
		"HUD_COMPONENT_ALL",
		"HUD_COMPONENT_AMMO",
		"HUD_COMPONENT_ARMOUR",
		"HUD_COMPONENT_BREATH",
		"HUD_COMPONENT_CROSSHAIR",
		"HUD_COMPONENT_HEALTH",
		"HUD_COMPONENT_MINIMAP",
		"HUD_COMPONENT_MONEY",
		"HUD_COMPONENT_WEAPON",
		"MOUSE_LEFT_CLICK",
		"MOUSE_MIDDLE_CLICK",
		"MOUSE_RIGHT_CLICK",
		"NO_BLUR_INTENSITY",
		"PAUSE_ID_AUDIODEFAULTSETTINGS",
		"PAUSE_ID_AUDIOSETTINGS",
		"PAUSE_ID_BRIEF",
		"PAUSE_ID_CONTROLLERDEFAULTSETTINGS",
		"PAUSE_ID_CONTROLLERSETUP",
		"PAUSE_ID_DEFAULTSETTINGS",
		"PAUSE_ID_DISPLAYSETTINGS",
		"PAUSE_ID_FOOTVEHICLECONTROLS",
		"PAUSE_ID_JOYPADSETTINGS",
		"PAUSE_ID_LANGUAGE",
		"PAUSE_ID_MAIN",
		"PAUSE_ID_MAP",
		"PAUSE_ID_MOUSESETTINGS",
		"PAUSE_ID_OPTIONS",
		"PAUSE_ID_QUITGAME",
		"PAUSE_ID_REDEFINECONTROLS",
		"PAUSE_ID_STARTGAME",
		"PAUSE_ID_STATS",
		"PAUSE_ID_USERTRACKOPTIONS",
		"PLAYER_ACTION_ALL",
		"PLAYER_ACTION_CROUCH",
		"PLAYER_ACTION_ENTER_CAR",
		"PLAYER_ACTION_FIRE_WEAPON",
		"PLAYER_ACTION_JUMP",
		"PLAYER_ACTION_SPRINT",
		"PLAYER_ACTION_SWITCH_WEAPON",
		"PLAYER_ACTION_UNKNOWN",
		"RADIO_BOUNCEFM",
		"RADIO_CSR",
		"RADIO_KDST",
		"RADIO_KJAHWEST",
		"RADIO_KROSE",
		"RADIO_LOSSANTOS",
		"RADIO_MASTERSOUNDS",
		"RADIO_OFF",
		"RADIO_PLAYBACKFM",
		"RADIO_RADIOX",
		"RADIO_SFUR",
		"RADIO_UTP",
		"RADIO_WCTR",
		"STUNT_TYPE_INSANE",
		"STUNT_TYPE_STOPPIE",
		"STUNT_TYPE_TWO_WHEELS",
		"STUNT_TYPE_WHEELIE",

		/*

		███████╗███╗   ██╗██████╗ 
		██╔════╝████╗  ██║██╔══██╗
		█████╗  ██╔██╗ ██║██║  ██║
		██╔══╝  ██║╚██╗██║██║  ██║
		███████╗██║ ╚████║██████╔╝
		╚══════╝╚═╝  ╚═══╝╚═════╝ 

		*/           

		/////////////////////////////////////////////////////////////////////////////////////


		{},

		"STREAMER_TYPE_PICKUP",
		"STREAMER_TYPE_CP",
		"STREAMER_TYPE_RACE_CP",
		"STREAMER_TYPE_MAP_ICON",
		"STREAMER_TYPE_3D_TEXT_LABEL",
		"STREAMER_TYPE_AREA",
		"STREAMER_AREA_TYPE_CIRCLE",
		"STREAMER_AREA_TYPE_RECTANGLE",
		"STREAMER_AREA_TYPE_SPHERE",
		"STREAMER_AREA_TYPE_CUBE",
		"STREAMER_AREA_TYPE_POLYGON",
		"STREAMER_OBJECT_TYPE_GLOBAL",
		"STREAMER_OBJECT_TYPE_PLAYER",
		"STREAMER_OBJECT_TYPE_DYNAMIC",
		"STREAMER_OPC",
		"STREAMER_OPDC",
		"STREAMER_OPEO",
		"STREAMER_OPSO",
		"STREAMER_OPPP",
		"STREAMER_OPEC",
		"STREAMER_OPLC",
		"STREAMER_OPERC",
		"STREAMER_OPLRC",
		"CARMODTYPE_SPOILER",
		"CARMODTYPE_HOOD",
		"CARMODTYPE_ROOF",
		"CARMODTYPE_SIDESKIRT",
		"CARMODTYPE_LAMPS",
		"CARMODTYPE_NITRO",
		"CARMODTYPE_EXHAUST",
		"CARMODTYPE_WHEELS",
		"CARMODTYPE_STEREO",
		"CARMODTYPE_HYDRAULICS",
		"CARMODTYPE_FRONT_BUMPER",
		"CARMODTYPE_REAR_BUMPER",
		"CARMODTYPE_VENT_RIGHT",
		"CARMODTYPE_VENT_LEFT",
		"VEHICLE_PARAMS_UNSET",
		"VEHICLE_PARAMS_OFF",
		"VEHICLE_PARAMS_ON",
		"VEHICLE_MODEL_INFO_SIZE",
		"VEHICLE_MODEL_INFO_FRONTSEAT",
		"VEHICLE_MODEL_INFO_REARSEAT",
		"VEHICLE_MODEL_INFO_PETROLCAP",
		"VEHICLE_MODEL_INFO_WHEELSFRONT",
		"VEHICLE_MODEL_INFO_WHEELSREAR",
		"VEHICLE_MODEL_INFO_WHEELSMID",
		"VEHICLE_MODEL_INFO_FRONT_BUMPER_Z",
		"VEHICLE_MODEL_INFO_REAR_BUMPER_Z",
		"MAX_PLAYER_NAME",
		"MAX_PLAYERS",
		"MAX_VEHICLES",
		"INVALID_PLAYER_ID",
		"INVALID_VEHICLE_ID",
		"NO_TEAM",
		"MAX_OBJECTS",
		"INVALID_OBJECT_ID",
		"MAX_GANG_ZONES",
		"MAX_TEXT_DRAWS",
		"MAX_PLAYER_TEXT_DRAWS",
		"MAX_MENUS",
		"MAX_3DTEXT_GLOBAL",
		"MAX_3DTEXT_PLAYER",
		"MAX_PICKUPS",
		"INVALID_MENU",
		"INVALID_TEXT_DRAW",
		"INVALID_GANG_ZONE",
		"INVALID_3DTEXT_ID",
		"TEXT_DRAW_FONT_SPRITE_DRAW",
		"TEXT_DRAW_FONT_MODEL_PREVIEW",
		"DIALOG_STYLE_MSGBOX",
		"DIALOG_STYLE_INPUT",
		"DIALOG_STYLE_LIST",
		"DIALOG_STYLE_PASSWORD",
		"PLAYER_STATE_NONE",
		"PLAYER_STATE_ONFOOT",
		"PLAYER_STATE_DRIVER",
		"PLAYER_STATE_PASSENGER",
		"PLAYER_STATE_EXIT_VEHICLE",
		"PLAYER_STATE_ENTER_VEHICLE_DRIVER",
		"PLAYER_STATE_ENTER_VEHICLE_PASSENGER",
		"PLAYER_STATE_WASTED",
		"PLAYER_STATE_SPAWNED",
		"PLAYER_STATE_SPECTATING",
		"PLAYER_MARKERS_MODE_OFF",
		"PLAYER_MARKERS_MODE_GLOBAL",
		"PLAYER_MARKERS_MODE_STREAMED",
		"WEAPON_BRASSKNUCKLE",
		"WEAPON_GOLFCLUB",
		"WEAPON_NITESTICK",
		"WEAPON_KNIFE",
		"WEAPON_BAT",
		"WEAPON_SHOVEL",
		"WEAPON_POOLSTICK",
		"WEAPON_KATANA",
		"WEAPON_CHAINSAW",
		"WEAPON_DILDO",
		"WEAPON_DILDO2",
		"WEAPON_VIBRATOR",
		"WEAPON_VIBRATOR2",
		"WEAPON_FLOWER",
		"WEAPON_CANE",
		"WEAPON_GRENADE",
		"WEAPON_TEARGAS",
		"WEAPON_MOLTOV",
		"WEAPON_COLT45",
		"WEAPON_SILENCED",
		"WEAPON_DEAGLE",
		"WEAPON_SHOTGUN",
		"WEAPON_SAWEDOFF",
		"WEAPON_SHOTGSPA",
		"WEAPON_UZI",
		"WEAPON_MP5",
		"WEAPON_AK47",
		"WEAPON_M4",
		"WEAPON_TEC9",
		"WEAPON_RIFLE",
		"WEAPON_SNIPER",
		"WEAPON_ROCKETLAUNCHER",
		"WEAPON_HEATSEEKER",
		"WEAPON_FLAMETHROWER",
		"WEAPON_MINIGUN",
		"WEAPON_SATCHEL",
		"WEAPON_BOMB",
		"WEAPON_SPRAYCAN",
		"WEAPON_FIREEXTINGUISHER",
		"WEAPON_CAMERA",
		"WEAPON_PARACHUTE",
		"WEAPON_VEHICLE",
		"WEAPON_DROWN",
		"WEAPON_COLLISION",
		"KEY_ACTION",
		"KEY_CROUCH",
		"KEY_FIRE",
		"KEY_SPRINT",
		"KEY_SECONDARY_ATTACK",
		"KEY_JUMP",
		"KEY_LOOK_RIGHT",
		"KEY_HANDBRAKE",
		"KEY_LOOK_LEFT",
		"KEY_SUBMISSION",
		"KEY_LOOK_BEHIND",
		"KEY_WALK",
		"KEY_ANALOG_UP",
		"KEY_ANALOG_DOWN",
		"KEY_ANALOG_LEFT",
		"KEY_ANALOG_RIGHT",
		"KEY_YES",
		"KEY_NO",
		"KEY_CTRL_BACK",
		"KEY_UP",
		"KEY_DOWN",
		"KEY_LEFT",
		"KEY_RIGHT",
		"CLICK_SOURCE_SCOREBOARD",
		"EDIT_RESPONSE_CANCEL",
		"EDIT_RESPONSE_FINAL",
		"EDIT_RESPONSE_UPDATE",
		"SELECT_OBJECT_GLOBAL_OBJECT",
		"SELECT_OBJECT_PLAYER_OBJECT",
		"SPECIAL_ACTION_NONE",
		"SPECIAL_ACTION_DUCK",
		"SPECIAL_ACTION_USEJETPACK",
		"SPECIAL_ACTION_ENTER_VEHICLE",
		"SPECIAL_ACTION_EXIT_VEHICLE",
		"SPECIAL_ACTION_DANCE1",
		"SPECIAL_ACTION_DANCE2",
		"SPECIAL_ACTION_DANCE3",
		"SPECIAL_ACTION_DANCE4",
		"SPECIAL_ACTION_HANDSUP",
		"SPECIAL_ACTION_USECELLPHONE",
		"SPECIAL_ACTION_SITTING",
		"SPECIAL_ACTION_STOPUSECELLPHONE",
		"SPECIAL_ACTION_DRINK_BEER",
		"SPECIAL_ACTION_SMOKE_CIGGY",
		"SPECIAL_ACTION_DRINK_WINE",
		"SPECIAL_ACTION_DRINK_SPRUNK",
		"SPECIAL_ACTION_CUFFED",
		"SPECIAL_ACTION_CARRY",
		"FIGHT_STYLE_NORMAL",
		"FIGHT_STYLE_BOXING",
		"FIGHT_STYLE_KUNGFU",
		"FIGHT_STYLE_KNEEHEAD",
		"FIGHT_STYLE_GRABKICK",
		"FIGHT_STYLE_ELBOW",
		"WEAPONSKILL_PISTOL",
		"WEAPONSKILL_PISTOL_SILENCED",
		"WEAPONSKILL_DESERT_EAGLE",
		"WEAPONSKILL_SHOTGUN",
		"WEAPONSKILL_SAWNOFF_SHOTGUN",
		"WEAPONSKILL_SPAS12_SHOTGUN",
		"WEAPONSKILL_MICRO_UZI",
		"WEAPONSKILL_MP5",
		"WEAPONSKILL_AK47",
		"WEAPONSKILL_M4",
		"WEAPONSKILL_SNIPERRIFLE",
		"WEAPONSTATE_UNKNOWN",
		"WEAPONSTATE_NO_BULLETS",
		"WEAPONSTATE_LAST_BULLET",
		"WEAPONSTATE_MORE_BULLETS",
		"WEAPONSTATE_RELOADING",
		"MAX_PLAYER_ATTACHED_OBJECTS",
		"PLAYER_VARTYPE_NONE",
		"PLAYER_VARTYPE_INT",
		"PLAYER_VARTYPE_STRING",
		"PLAYER_VARTYPE_FLOAT",
		"MAX_CHATBUBBLE_LENGTH",
		"MAPICON_LOCAL",
		"MAPICON_GLOBAL",
		"MAPICON_LOCAL_CHECKPOINT",
		"MAPICON_GLOBAL_CHECKPOINT",
		"CAMERA_CUT",
		"CAMERA_MOVE",
		"SPECTATE_MODE_NORMAL",
		"SPECTATE_MODE_FIXED",
		"SPECTATE_MODE_SIDE",
		"PLAYER_RECORDING_TYPE_NONE",
		"PLAYER_RECORDING_TYPE_DRIVER",
		"PLAYER_RECORDING_TYPE_ONFOOT",
		"OBJECT_MATERIAL_TEXT_ALIGN_LEFT",
		"OBJECT_MATERIAL_TEXT_ALIGN_CENTER",
		"OBJECT_MATERIAL_TEXT_ALIGN_RIGHT",
		"PLAYER_RECORDING_TYPE_NONE",
		"PLAYER_RECORDING_TYPE_DRIVER",
		"PLAYER_RECORDING_TYPE_ONFOOT",
		"PLAYER_STATE_NONE",
		"PLAYER_STATE_ONFOOT",
		"PLAYER_STATE_DRIVER",
		"PLAYER_STATE_PASSENGER",
		"PLAYER_STATE_WASTED",
		"PLAYER_STATE_SPAWNED",
		"PLAYER_STATE_SPECTATING",
		"MAX_PLAYER_NAME",
		"MAX_PLAYERS",
		"MAX_VEHICLES",
		"INVALID_PLAYER_ID",
		"INVALID_VEHICLE_ID",
		"NO_TEAM",
		"MAX_OBJECTS",
		"INVALID_OBJECT_ID",
		"MAX_GANG_ZONES",
		"MAX_TEXT_DRAWS",
		"MAX_MENUS",
		"INVALID_MENU",
		"INVALID_TEXT_DRAW",
		"INVALID_GANG_ZONE",
		"WEAPON_BRASSKNUCKLE",
		"WEAPON_GOLFCLUB",
		"WEAPON_NITESTICK",
		"WEAPON_KNIFE",
		"WEAPON_BAT",
		"WEAPON_SHOVEL",
		"WEAPON_POOLSTICK",
		"WEAPON_KATANA",
		"WEAPON_CHAINSAW",
		"WEAPON_DILDO",
		"WEAPON_DILDO2",
		"WEAPON_VIBRATOR",
		"WEAPON_VIBRATOR2",
		"WEAPON_FLOWER",
		"WEAPON_CANE",
		"WEAPON_GRENADE",
		"WEAPON_TEARGAS",
		"WEAPON_MOLTOV",
		"WEAPON_COLT45",
		"WEAPON_SILENCED",
		"WEAPON_DEAGLE",
		"WEAPON_SHOTGUN",
		"WEAPON_SAWEDOFF",
		"WEAPON_SHOTGSPA",
		"WEAPON_UZI",
		"WEAPON_MP5",
		"WEAPON_AK47",
		"WEAPON_M4",
		"WEAPON_TEC9",
		"WEAPON_RIFLE",
		"WEAPON_SNIPER",
		"WEAPON_ROCKETLAUNCHER",
		"WEAPON_HEATSEEKER",
		"WEAPON_FLAMETHROWER",
		"WEAPON_MINIGUN",
		"WEAPON_SATCHEL",
		"WEAPON_BOMB",
		"WEAPON_SPRAYCAN",
		"WEAPON_FIREEXTINGUISHER",
		"WEAPON_CAMERA",
		"WEAPON_PARACHUTE",
		"WEAPON_VEHICLE",
		"WEAPON_DROWN",
		"WEAPON_COLLISION",
		"KEY_ACTION",
		"KEY_CROUCH",
		"KEY_FIRE",
		"KEY_SPRINT",
		"KEY_SECONDARY_ATTACK",
		"KEY_JUMP",
		"KEY_LOOK_RIGHT",
		"KEY_HANDBRAKE",
		"KEY_LOOK_LEFT",
		"KEY_SUBMISSION",
		"KEY_LOOK_BEHIND",
		"KEY_WALK",
		"KEY_ANALOG_UP",
		"KEY_ANALOG_DOWN",
		"KEY_ANALOG_RIGHT",
		"KEY_ANALOG_LEFT",
		"KEY_UP",
		"KEY_DOWN",
		"KEY_LEFT",
		"KEY_RIGHT",
		"HTTP_GET",
		"HTTP_POST",
		"HTTP_HEAD",
		"HTTP_ERROR_BAD_HOST",
		"HTTP_ERROR_NO_SOCKET",
		"HTTP_ERROR_CANT_CONNECT",
		"HTTP_ERROR_CANT_WRITE",
		"HTTP_ERROR_CONTENT_TOO_BIG",
		"HTTP_ERROR_MALFORMED_RESPONSE"
	]
}
